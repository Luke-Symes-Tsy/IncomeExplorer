[{"name":"server.R","content":"#\r\n# This is the server logic of the Income Explorer Shiny web application. You can\r\n# run the application by clicking 'Run App' above.\r\n#\r\n\r\nsuppressMessages({\r\n  library(shiny)\r\n  library(shinyjs)\r\n  library(openxlsx)\r\n  library(magrittr)\r\n  library(data.table)\r\n  library(zip)\r\n})\r\n\r\n# Define server logic required to run the app\r\nshinyServer(function(input, output, session) {\r\n  ##########################################\r\n  # Pop up warning on start \r\n  ##########################################\r\n  # the modal dialog where the user can enter the query details.\r\n  warning_modal <- modalDialog(\r\n    title = \"Warning\", \r\n    paste0(\r\n      \"This software is provided as-is, for research purposes only, \",\r\n      \"with absolutely no warranty or guarantee of correctness.\"\r\n    ),\r\n    footer = actionButton(\"close_warning\", \"Dismiss\"),\r\n    easyClose = FALSE, fade = FALSE\r\n  )\r\n  \r\n  # Show the model on start up ...\r\n  showModal(warning_modal)\r\n  \r\n  observeEvent(input$Partnered, {\r\n    if (input$Partnered) {\r\n      show(\"gross_wage2\")\r\n      show(\"hours2\")\r\n    } else {\r\n      hide(\"gross_wage2\")\r\n      hide(\"hours2\")\r\n    }\r\n  })\r\n  \r\n  #### Selecting and/or Uploading parameter files ####\r\n  # Get default parameter files for scenarios\r\n  default_files <- list.files(\r\n    path = \"inst/parameters\", pattern = glob2rx(\"*.yaml\"), full.names = TRUE\r\n  )\r\n  default_files_names <- basename(default_files) %>% tools::file_path_sans_ext()\r\n  names(default_files) <- default_files_names\r\n  \r\n  # Store scenario files in a reactive variable\r\n  all_scenarios <- reactiveValues(names = default_files_names, paths = default_files)\r\n  loaded_scenarios <- reactiveValues(names = list(), params = list(), incomes = list())\r\n  \r\n  # When the warning dialog is closed, update the selection to add\r\n  # default scenarios as choices - this is a workaround for a shinylive issue\r\n  # because with normal R shiny the observeEvent after this one updates it for us\r\n  observeEvent(input$close_warning, {\r\n    updateSelectizeInput(\r\n      session, \"selected_scenarios\",\r\n      choices = all_scenarios$names, selected = NULL\r\n    )\r\n    removeModal()\r\n  })\r\n  \r\n  # Add a scenario to the list when a new scenario file is uploaded\r\n  observeEvent(input$upload_scenarios_button, {\r\n    new_scenarios <- req(input$upload_scenarios_button)\r\n    new_scenario_names <- new_scenarios$name %>% tools::file_path_sans_ext()\r\n    overlapping_names <- intersect(new_scenario_names, all_scenarios$names)\r\n    for (overlapping_name in overlapping_names) {\r\n      # Avoid using any existing names\r\n      new_scenario_names[new_scenario_names == overlapping_name] <-\r\n        paste0(\"Uploaded_\", overlapping_name)\r\n    }\r\n    new_scenario_files <- as.list(new_scenarios$datapath)\r\n    names(new_scenario_files) <- new_scenario_names\r\n    \r\n    all_scenarios$names <- c(new_scenario_names, all_scenarios$names)\r\n    all_scenarios$paths <- c(new_scenario_files, all_scenarios$paths)\r\n    \r\n    # Add the new scenarios to the current selection\r\n    new_selection <- c(input$selected_scenarios, new_scenario_names)\r\n    updateSelectizeInput(\r\n      session, \"selected_scenarios\",\r\n      choices = all_scenarios$names, selected = new_selection\r\n    )\r\n  })\r\n  \r\n  #######################################################\r\n  # Loading parameters from files and calculating incomes\r\n  #######################################################\r\n  \r\n  # Check for newly selected scenarios, and load them\r\n  # Note that incomes are loaded as \"reactive\" values,\r\n  # and will be recalculated if family parameters are changed\r\n  observe({\r\n    if (length(loaded_scenarios$params) > 0) {\r\n      loaded_scenarios_names <- names(loaded_scenarios$params)\r\n    } else {\r\n      loaded_scenarios_names <- c()\r\n    }\r\n    newly_selected_scenarios <- setdiff(input$selected_scenarios, loaded_scenarios_names)\r\n    if (length(newly_selected_scenarios) > 0) {\r\n      lapply(newly_selected_scenarios, function(newly_selected_scenario) {\r\n        new_params <- parameters_from_file(all_scenarios$paths[[newly_selected_scenario]])\r\n        new_income <- reactive({get_scenario_income(new_params)})\r\n        loaded_scenarios$params[[newly_selected_scenario]] <- new_params\r\n        loaded_scenarios$incomes[[newly_selected_scenario]] <- new_income\r\n      })\r\n    }\r\n    # Check for any loaded scenarios that are un-selected, and delete them\r\n    unselected_scenarios <- setdiff(loaded_scenarios_names, input$selected_scenarios)\r\n    if (length(unselected_scenarios) > 0) {\r\n      loaded_scenarios$params[unselected_scenarios] <- NULL\r\n      loaded_scenarios$incomes[unselected_scenarios] <- NULL\r\n    }\r\n    # Set loaded order based on selection order\r\n    loaded_scenarios$names <- input$selected_scenarios\r\n  })\r\n  \r\n  get_scenario_income <- function(params) {\r\n    scenario_income <- calculate_income(\r\n      # System parameters\r\n      params,\r\n      # Family parameters\r\n      max_hours = input$max_hours,\r\n      hourly_wage = input$wage1_hourly,\r\n      children_ages = input$Children_ages,\r\n      # Partner parameters\r\n      partnered = input$Partnered,\r\n      partner_wages = input$gross_wage2,\r\n      partner_hours = input$hours2,\r\n      # Accommodation parameters\r\n      accommodation_type = input$Acc_type,\r\n      as_accommodation_costs = input$AS_Accommodation_Costs,\r\n      as_area = as.numeric(input$AS_Area),\r\n      # Presentation parameters\r\n      steps_per_dollar = 1L,\r\n      weeks_in_year = 52L\r\n    )\r\n    return(scenario_income)\r\n  }\r\n  \r\n  #### Join incomes together as one data.table ####\r\n  get_scenario_incomes <- reactive({\r\n    req(loaded_scenarios$incomes)\r\n    # Index into the loaded incomes using the selection order rather than loaded order\r\n    loaded_scenario_incomes <- loaded_scenarios$incomes[loaded_scenarios$names]\r\n    scenario_incomes_list <- lapply(loaded_scenario_incomes, function(x) x())\r\n    scenario_incomes <- rbindlist(scenario_incomes_list, idcol = \"Scenario\")\r\n    return(scenario_incomes)\r\n  })\r\n  \r\n  # An empty placeholder plot for when no scenarios are selected\r\n  # This is for shinylive which needs empty plots otherwise it errors\r\n  empty_plot <- plot_ly(type = \"scatter\", mode = \"none\") %>% layout(\r\n    xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\r\n    yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE)\r\n  )\r\n  \r\n  #### Net Income plot ####\r\n  output$plot_netincome <- renderPlotly({\r\n    X_results <- req(get_scenario_incomes())\r\n    if (nrow(X_results) > 0) {\r\n      output_plot <- compare_net_income_plot(X_results)\r\n    } else {\r\n      output_plot <- empty_plot\r\n    }\r\n    return(output_plot)\r\n  })\r\n  \r\n  #### EMTR plot ####\r\n  output$plot_emtr <- renderPlotly({\r\n    X_results <- req(get_scenario_incomes())\r\n    if (nrow(X_results) > 0) {\r\n      output_plot <- plot_rates(X_results, \"EMTR\", \"Effective Marginal Tax Rate\")\r\n    } else {\r\n      output_plot <- empty_plot\r\n    }\r\n    return(output_plot)\r\n  })\r\n  \r\n  #### RR plot ####\r\n  output$plot_replacement_rate <- renderPlotly({\r\n    X_results <- req(get_scenario_incomes())\r\n    if (nrow(X_results) > 0) {\r\n      output_plot <- plot_rates(X_results, \"RR\", \"Replacement Rate\")\r\n    } else {\r\n      output_plot <- empty_plot\r\n    }\r\n    return(output_plot)\r\n  })\r\n  \r\n  #### PTR plot ####\r\n  output$plot_participation_tax_rate <- renderPlotly({\r\n    X_results <- req(get_scenario_incomes())\r\n    if (nrow(X_results) > 0) {\r\n      output_plot <- plot_rates(X_results, \"PTR\", \"Participation Tax Rate\")\r\n    } else {\r\n      output_plot <- empty_plot\r\n    }\r\n    return(output_plot)\r\n  })\r\n  \r\n  #### Income composition plots ####\r\n  selected_income_composition_tab <- reactiveValues(tab = NULL)\r\n  \r\n  # Render a tab for each scenario\r\n  output$income_composition_tabs <- renderUI({\r\n    do.call(tabsetPanel, c(\r\n      id = \"income_composition_tabs\",\r\n      lapply(input$selected_scenarios, function(scenario) {\r\n        tabPanel(\r\n          scenario,\r\n          plotlyOutput(paste0(\"plot_income_composition_\", scenario), height = \"500px\")\r\n        )\r\n      }),\r\n      selected = selected_income_composition_tab$tab, type = \"pills\"\r\n    ))\r\n  })\r\n  \r\n  # When the input selection changes, update the plot for each scenario\r\n  observeEvent(input$selected_scenarios, {\r\n    lapply(input$selected_scenarios, function(scenario) {\r\n      plot_id <- paste0(\"plot_income_composition_\", scenario)\r\n      output[[plot_id]] <- renderPlotly({\r\n        X_results <- req(get_scenario_incomes())\r\n        if (nrow(X_results) > 0) {\r\n          y_min <- 52*max(X_results[, wage_tax_and_ACC + benefit_tax])\r\n          y_max <- 52*max(X_results[, Net_Income])\r\n          output_plot <- income_composition_plot(\r\n            X_results[Scenario == scenario], y_min = y_min, y_max = y_max\r\n          )\r\n        } else {\r\n          output_plot <- empty_plot\r\n        }\r\n        return(output_plot)\r\n      })\r\n    })\r\n    # Remember which tab we were on\r\n    if (!is.null(input$income_composition_tabs)) {\r\n      if (input$income_composition_tabs %in% input$selected_scenarios) {\r\n        # Keep tab we are on since it is still in the selected scenarios\r\n        currently_selected_tab <- input$income_composition_tabs\r\n        selected_income_composition_tab$tab <- currently_selected_tab\r\n      } else if (length(input$selected_scenarios) > 0) {\r\n        # The tab we were on has been deleted, change to the last selected scenario\r\n        num_scenarios <- length(input$selected_scenarios)\r\n        last_selected_scenario <- input$selected_scenarios[num_scenarios]\r\n        selected_income_composition_tab$tab <- last_selected_scenario\r\n      }\r\n    }\r\n  })\r\n  \r\n  #### Display changed parameters ####\r\n  output$changed_parameters <- renderTable({\r\n    # Index into loaded params using the saved selection order\r\n    params <- req(loaded_scenarios$params[loaded_scenarios$names])\r\n    get_parameter_changes(params)\r\n  })\r\n  \r\n  #### Download buttons ####\r\n  \r\n  # Enable download buttons only when a selection exists\r\n  observe({\r\n    if (length(input$selected_scenarios) > 0) {\r\n      enable(\"download_params_button\")\r\n      enable(\"download_results_button\")\r\n    } else {\r\n      disable(\"download_params_button\")\r\n      disable(\"download_results_button\")\r\n    }\r\n  })\r\n  \r\n  # Download scenario parameters\r\n  observeEvent(input$download_params_button, {\r\n    params <- req(loaded_scenarios$params)\r\n    param_names <- names(params)\r\n    param_paths <- all_scenarios$paths[param_names]\r\n    if (length(param_paths) == 0) {\r\n      disable(input$download_params_button)\r\n    } else {\r\n      # Create new excel files from the loaded parameters\r\n      temp_directory <- file.path(tempdir(), as.integer(Sys.time()))\r\n      dir.create(temp_directory)\r\n      output_paths <- file.path(temp_directory, paste0(param_names, \".xlsx\"))\r\n      names(output_paths) <- param_names\r\n      for (param_name in param_names) {\r\n        save_excel_params(params[[param_name]], output_paths[[param_name]])\r\n      }\r\n      if (length(param_names) == 1) {\r\n        server_file_path <- output_paths[1]\r\n        output_name <- basename(output_paths[1])\r\n      } else {\r\n        server_file_path <- file.path(temp_directory, \"Scenarios.zip\")\r\n        zip::zip(zipfile = server_file_path, files = dir(temp_directory), root = temp_directory)\r\n        output_name <- \"Scenarios.zip\"\r\n      }\r\n      js_download_file <- get_js_download_file(\r\n        server_file_path = server_file_path, download_file_name = output_name\r\n      )\r\n      runjs(js_download_file)\r\n      \r\n      updateActionButton(session, \"download_params_button\", icon = icon(\"download\"))\r\n      enable(\"download_params_button\")\r\n    }\r\n  })\r\n  \r\n  # Download scenario results\r\n  observeEvent(input$download_results_button, {\r\n    params <- req(loaded_scenarios$params)\r\n    if (length(params) == 0) {\r\n      disable(input$download_results_button)\r\n    } else {\r\n      output_path <- \"IncomeExplorerResults.xlsx\"\r\n      scenario_incomes <- req(get_scenario_incomes())\r\n      parameter_differences <- get_parameter_changes(params)\r\n\r\n      # Details of the example family and input files\r\n      details <- c(\r\n        HourlyWage = input$wage1_hourl,\r\n        Partnered = input$Partnered,\r\n        Partner_HourlyWage = input$gross_wage2*(input$Partnered == 1),\r\n        Partner_HoursWorked = input$hours2*(input$Partnered == 1),\r\n        Accomodation_Costs = input$AS_Accommodation_Costs,\r\n        Accomodation_Type = input$Acc_type,\r\n        AS_Area = input$AS_Area,\r\n        Children_Ages = input$Children_ages\r\n      )\r\n      \r\n      save_app_results(\r\n        details, parameter_differences, scenario_incomes, output_path\r\n      )\r\n\r\n      js_download_file <- get_js_download_file(\r\n        server_file_path = output_path, download_file_name = output_path\r\n      )\r\n      runjs(js_download_file)\r\n      \r\n      updateActionButton(session, \"download_results_button\", icon = icon(\"download\"))\r\n      enable(\"download_results_button\")\r\n    }\r\n  })\r\n})\r\n","type":"text"},{"name":"ui.R","content":"#\r\n# This is the user-interface definition of the Income Explorer Shiny web application. You can\r\n# run the application by clicking 'Run App' above.\r\n#\r\n###############################\r\n# Libraries\r\n###############################\r\n\r\nsuppressMessages({\r\n  library(shiny)\r\n  library(shinyjs)\r\n  library(shinythemes)\r\n  library(plotly)\r\n  library(rhandsontable)\r\n  library(data.table)\r\n})\r\n\r\n# TY24 minimum wage\r\nDEFAULT_HOURLY_WAGE <- 22.70\r\n\r\n# Define UI\r\nshinyUI(fluidPage(\r\n  # different themes from shinythemes R package, https://rstudio.github.io/shinythemes/\r\n  theme = shinytheme(\"sandstone\"),\r\n  useShinyjs(),\r\n  # Application title\r\n  titlePanel(\"Income Explorer (version 1.0.0)\"),\r\n  # Side menu\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      width = 4,\r\n      fluidRow(column(12, selectizeInput(\"selected_scenarios\", \"Scenarios\", choices = NULL, selected = NULL, multiple = TRUE))),\r\n      fluidRow(\r\n        column(\r\n          12, align = \"right\",\r\n          fileInputButton(\r\n            \"upload_scenarios_button\", buttonLabel = \"Add scenarios\", icon = icon(\"plus\"),\r\n            multiple = TRUE, accept = c(\".xlsx\", \".xls\", \".yaml\", \".yml\"),\r\n          ),\r\n          actionButtonLoading(\r\n            \"download_params_button\", \"Scenarios\", icon = icon(\"download\")\r\n          ),\r\n          actionButtonLoading(\r\n            \"download_results_button\", \"Results\", icon = icon(\"download\")\r\n          )\r\n        )\r\n      ),\r\n      \r\n      hr(style = \"border-top: 1px solid #ccc\"),\r\n      \r\n      # Input the hourly wage and hours\r\n      fluidRow(\r\n        column(6, numericInput(\r\n          \"wage1_hourly\", \"Hourly wage ($)\",\r\n          value = DEFAULT_HOURLY_WAGE, step = .1\r\n        )),\r\n        column(6, numericInput(\"max_hours\", \"Max hours/week\", \"50\"))\r\n      ),\r\n      \r\n      # Input accomodation cost settings\r\n      fluidRow(\r\n        column(4, selectInput(\r\n          \"Acc_type\", label = \"Accommodation type\",\r\n          choices = c(\"Renting\", \"Mortgage\"), selected = \"Renting\"\r\n        )),\r\n        column(5, numericInput(\r\n          \"AS_Accommodation_Costs\", \"Weekly housing cost ($)\",\r\n          min = 0, max = 2000, value = 450, step = 5\r\n        )),\r\n        column(3, selectInput(\r\n          \"AS_Area\", label = \"AS area code\",\r\n          choices = c(1, 2, 3, 4), selected = 2\r\n        ))\r\n      ),\r\n      # Input the children's ages\r\n      textInput(\r\n        \"Children_ages\",\r\n        \"Age of children (e.g. '1, 4' or leave blank)\",\r\n        \"0, 10\"\r\n      ),\r\n      # Input partner status\r\n      checkboxInput(\"Partnered\", \"Partnered\", value = FALSE),\r\n      # Input parter wage details, note that this is only\r\n      # displayed if there is a partner\r\n      fluidRow(\r\n        column(6, hidden(numericInput(\r\n          \"gross_wage2\", \"Partner's hourly wage ($)\",\r\n          min = 15, max = 100,\r\n          value = DEFAULT_HOURLY_WAGE, step = .1\r\n        ))),\r\n        column(6, hidden(\r\n          numericInput(\r\n            \"hours2\", \"Partner's hours worked\",\r\n            min = 0, max = 80, value = 0, step = 5\r\n          )\r\n        ))\r\n      )\r\n    ),\r\n    # Main panel containing plots etc.\r\n    mainPanel(\r\n      tabsetPanel(\r\n        tabPanel(\r\n          \"Net Income\",\r\n          br(),\r\n          plotlyOutput(\"plot_netincome\", height = \"500px\")\r\n        ),\r\n        tabPanel(\r\n          \"EMTR\",\r\n          br(),\r\n          plotlyOutput(\"plot_emtr\", height = \"500px\")\r\n        ),\r\n        tabPanel(\r\n          \"RR\",\r\n          br(),\r\n          plotlyOutput(\"plot_replacement_rate\", height = \"500px\")\r\n        ),\r\n        tabPanel(\r\n          \"PTR\",\r\n          br(),\r\n          plotlyOutput(\"plot_participation_tax_rate\", height = \"500px\")\r\n        ),\r\n        tabPanel(\r\n          \"Income Composition\",\r\n          p(style = \"margin-bottom: 0.5em\"),\r\n          uiOutput(\"income_composition_tabs\")\r\n        ),\r\n        tabPanel(\"Policy Changes\", tableOutput(\"changed_parameters\"))\r\n      )\r\n    )\r\n  )\r\n))\r\n","type":"text"},{"name":"R/app_utilities.R","content":"tsy_palette <- c( \r\n  rgb(0, 131, 172, maxColorValue = 255),\r\n  rgb(0, 188, 226, maxColorValue = 255),\r\n  rgb(103, 168, 84, maxColorValue = 255),\r\n  rgb(188, 214, 81, maxColorValue = 255),\r\n  rgb(241, 164, 45, maxColorValue = 255),\r\n  rgb(239, 150, 108, maxColorValue = 255),\r\n  rgb(0, 79, 103, maxColorValue = 255),\r\n  rgb(0, 113, 136, maxColorValue = 255),\r\n  rgb(62, 101, 50, maxColorValue = 255),\r\n  rgb(122, 143, 34, maxColorValue = 255),\r\n  rgb(13, 143, 34, maxColorValue = 255),\r\n  rgb(122, 42, 34, maxColorValue = 255)\r\n)\r\n\r\n# Converts a string used to input children's ages into numeric values\r\nconvert_ages <- function(input_string){\r\n  ages = as.numeric(strsplit(input_string, \",\")[[1]])\r\n  ages = sort(ages)\r\n  return(ages)\r\n}\r\n\r\ncalculate_income <- function(\r\n    params,\r\n    max_hours, hourly_wage, children_ages,\r\n    partnered, partner_wages, partner_hours,\r\n    accommodation_type, as_accommodation_costs, as_area,\r\n    steps_per_dollar = 1L, weeks_in_year = 52L\r\n) {\r\n  # convert inputs\r\n  max_wage <- max_hours*hourly_wage\r\n  children <- convert_ages(children_ages)\r\n  \r\n  as_accommodation_rent <- (accommodation_type == \"Renting\")\r\n  \r\n  partner_wages <- (partnered == 1)*partner_wages*partner_hours\r\n  partner_hours <- (partnered == 1)*partner_hours\r\n  \r\n  mftc_wep_scaling <- params$MFTC_WEP_scaling\r\n  \r\n  # Create helper emtr function using current inputs\r\n  calc_emtr <- function(params) {\r\n    emtr(\r\n      # System parameters\r\n      params,\r\n      # Family parameters\r\n      Partnered = partnered,\r\n      wage1_hourly = hourly_wage,\r\n      Children_ages = children,\r\n      gross_wage2 = partner_wages,\r\n      hours2 = partner_hours,\r\n      # Accommodation\r\n      AS_Accommodation_Costs = as_accommodation_costs,\r\n      AS_Accommodation_Rent = as_accommodation_rent,\r\n      AS_Area = as.numeric(as_area),\r\n      # Presentation parameters\r\n      max_wage = max_wage,\r\n      steps_per_dollar = 1L,\r\n      weeks_in_year = 52L,\r\n      MFTC_WEP_scaling = as.numeric(mftc_wep_scaling)\r\n    )\r\n  }\r\n  \r\n  # MFTC is meant to make families always better off being off-benefit than staying\r\n  # on a benefit. We let the user set whether the family stays on benefit\r\n  # or gets IWTC when they work, with the parameter input$WFFBEN_SQ. This can be:\r\n  # \"Max\" - choose the option which maximises the family income.\r\n  # \"WFF\" - go off the benefit while working, and get IWTC + MFTC.\r\n  # \"Benefit\" - stay on the benefit while working, and never get IWTC or MFTC\r\n  #             (benefit abates away as earned income increases).\r\n  # Note that these are only applicable when beneficiaries are ineligible for IWTC;\r\n  # MFTC eligibility currently depends on IWTC eligibility in the `emtr` function.\r\n  \r\n  emtr_income_with_IWTC <- calc_emtr(params)\r\n  \r\n  wff_or_ben <- params$WFF_or_Benefit\r\n  \r\n  if (wff_or_ben == \"WFF\") {\r\n    # print(\"Going off benefit (IWTC)\")\r\n    emtr_income <- emtr_income_with_IWTC\r\n  } else {\r\n    params_without_IWTC <- remove_IWTC_from_params(params)\r\n    emtr_income_without_IWTC <- calc_emtr(params_without_IWTC)\r\n    if (wff_or_ben == \"Benefit\") {\r\n      # print(\"Staying on benefit (no IWTC)\")\r\n      emtr_income <- emtr_income_without_IWTC\r\n    } else {\r\n      # Choose which of benefit or IWTC gives max net income\r\n      # print(\"Choosing max between IWTC or benefit\")\r\n      emtr_income <- choose_IWTC_or_benefit(\r\n        emtr_income_with_IWTC, emtr_income_without_IWTC\r\n      )\r\n    }\r\n  }\r\n  \r\n  return(emtr_income)\r\n}\r\n\r\n# Data table containing only the parameters that changed\r\n# and their values\r\nparams_to_string_dt <- function(params) {\r\n  params_string <- data.table()\r\n  for (p in names(params)) {\r\n    Value = params[[p]]\r\n    # convert scales to strings\r\n    if (length(Value) > 1) {\r\n      Value <- as.data.frame(Value)\r\n      Value <- paste0(\r\n        \"Thresholds:\", paste0(\"$\", Value$thresholds, collapse = \", \"), \"; \",\r\n        \"Rates:\", paste0(100*Value$rates, \"%\", collapse = \", \")\r\n      )\r\n    }\r\n    this_params_string <- data.table(Parameter = p, Value = Value)\r\n    params_string <- rbind(params_string, this_params_string)\r\n  }\r\n  return(params_string)\r\n}\r\n\r\nget_parameter_changes <- function(params_list) {\r\n  scenarios <- names(params_list)\r\n  if (length(scenarios) < 2) {\r\n    changes <- data.table()\r\n  } else {\r\n    # Load all parameters as strings, joining Scenario's in long format\r\n    params_list_str <- lapply(params_list, params_to_string_dt) %>%\r\n      setNames(names(params_list)) %>%\r\n      rbindlist(idcol = \"Scenario\")\r\n    params_list_str[, Scenario := factor(Scenario, levels = scenarios)]\r\n    params_list_str[, Parameter := factor(Parameter, levels = unique(Parameter))]\r\n    \r\n    # Calculate all sequential changes\r\n    params_list_str[, Change_Value := ifelse(Value == shift(Value), NA, Value), by = Parameter]\r\n    \r\n    changes <- dcast(\r\n      params_list_str[!is.na(Change_Value), .(Scenario, Parameter, Change_Value)],\r\n      ... ~ Scenario, value.var = \"Change_Value\"\r\n    )\r\n    if (nrow(changes) > 0) {\r\n      # There are some changes, so lets merge on the first scenario parameters\r\n      first_vals <- dcast(\r\n        params_list_str[Scenario == first(Scenario), .(Scenario, Parameter, Value)],\r\n        ... ~ Scenario, value.var = \"Value\"\r\n      )\r\n      changes <- merge(changes, first_vals, by = \"Parameter\", all.x = TRUE)\r\n      setcolorder(changes, c(\"Parameter\", scenarios[1]))\r\n      \r\n      # Now add blanks to any \"in-between\" scenarios\r\n      inbetween_scenarios <- setdiff(scenarios, setdiff(names(changes), \"Parameter\"))\r\n      changes[, (inbetween_scenarios) := NA]\r\n      setcolorder(changes, c(\"Parameter\", scenarios))\r\n      \r\n      # Set any NA's to be blank\r\n      changes[, (scenarios) := lapply(.SD, function(x) ifelse(is.na(x), \"\", x)), .SDcols = scenarios]\r\n      \r\n    } else {\r\n      # There are no changes\r\n      changes <- data.table()\r\n    }\r\n  }\r\n  return(changes)\r\n}\r\n\r\n\r\n\r\n# Plot income composition\r\nincome_composition_plot <- function(\r\n    EMTR_table, y_min = NULL, y_max = NULL, weeks_in_year = 52L\r\n) {\r\n  \r\n  plot_data <- copy(EMTR_table)\r\n  extended_tsy_palette <- colorRampPalette(tsy_palette)(20)\r\n  \r\n  set_colours <- c(\r\n    \"Best Start\" = extended_tsy_palette[1],\r\n    \"Winter Energy\" = extended_tsy_palette[2],\r\n    \"Accomodation Supplement\" = extended_tsy_palette[3],\r\n    \"IWTC\" = extended_tsy_palette[4],\r\n    \"FTC\" = extended_tsy_palette[5],\r\n    \"MFTC\" = extended_tsy_palette[6],\r\n    \"IETC\" = extended_tsy_palette[7],\r\n    \"Net Core Benefit\" = extended_tsy_palette[13],\r\n    \"Net Wage\" = extended_tsy_palette[18],\r\n    \"Net Wage (Partner)\" = extended_tsy_palette[11],\r\n    \"Tax on Core Benefit\" = extended_tsy_palette[10],\r\n    \"Tax on Wage and ACC\" = extended_tsy_palette[8]\r\n  )\r\n  \r\n  data_component_cols <- c(\r\n    \"Best Start\" = \"BestStart_Total\",\r\n    \"Winter Energy\" = \"WinterEnergy\",\r\n    \"Accomodation Supplement\" = \"AS_Amount\",\r\n    \"IWTC\" = \"IWTC_abated\",\r\n    \"FTC\" = \"FTC_abated\",\r\n    \"MFTC\" = \"MFTC\",\r\n    \"IETC\" = \"IETC_abated\",\r\n    \"Net Core Benefit\" = \"net_benefit\",\r\n    \"Net Wage\" = \"net_wage1\",\r\n    \"Net Wage (Partner)\" = \"net_wage2\",\r\n    \"Tax on Core Benefit\" = \"benefit_tax\",\r\n    \"Tax on Wage and ACC\" = \"wage_tax_and_ACC\"\r\n  )\r\n  \r\n  display_cols <- c(data_component_cols, \"Net Income\" = \"Net_Income\")\r\n  plot_data[, (display_cols) := lapply(.SD, function(x) x*weeks_in_year), .SDcols = display_cols]\r\n  \r\n  add_income_component <- function(p, income_component, stackgroup) {\r\n    p %>% add_trace(\r\n      data = plot_data, type = \"scatter\", mode = \"none\",\r\n      x = ~gross_wage1_annual,\r\n      y = ~.data[[data_component_cols[[income_component]]]],\r\n      name = income_component,\r\n      fillcolor = set_colours[[income_component]],\r\n      hovertemplate = paste0(income_component, \": %{y:$,.0f}<extra><\/extra>\"),\r\n      stackgroup = stackgroup\r\n    )\r\n  }\r\n  \r\n  p <- plot_ly()\r\n  # Add tax first\r\n  tax_col_names <- names(display_cols) %>% .[. %like% \"Tax\"]\r\n  for (tax_col_name in rev(tax_col_names)) {\r\n    p <- p %>% add_income_component(tax_col_name, stackgroup = \"one\")\r\n  }\r\n  # Add transfers second\r\n  transfer_col_names <- names(display_cols) %>% .[!(. %like% \"Tax\") & . != \"Net Income\"]\r\n  for (transfer_col_name in rev(transfer_col_names)) {\r\n    p <- p %>% add_income_component(transfer_col_name, stackgroup = \"two\")\r\n  }\r\n  \r\n  p <- p %>%\r\n    add_lines(\r\n      data = plot_data, x = ~ gross_wage1_annual,\r\n      y = ~ Net_Income, name = \"Net Income\", color = I(\"black\"), inherit = FALSE,\r\n      hovertemplate = paste(\"Net Income: %{y:$,.0f}<extra><\/extra>\")\r\n    ) %>%\r\n    add_trace(\r\n      data = plot_data, x =  ~ hours1, y =  ~ 0, xaxis = \"x2\",\r\n      type = \"scatter\", mode = \"lines\",\r\n      line = list(width = 0), hoverinfo = \"none\",\r\n      showlegend = FALSE, inherit = FALSE\r\n    ) %>%\r\n    layout(\r\n      xaxis2 = list(\r\n        overlaying = \"x\", nticks = 10, side = \"top\",\r\n        title = \"Hours/week\", automargin = TRUE, size = 8, showline = TRUE\r\n      ),\r\n      xaxis = list(\r\n        title = \"Annual gross wage income ($)\", tickformat = \"$,\",\r\n        automargin = TRUE, zeroline = TRUE, showline = TRUE, mirror = TRUE\r\n      ),\r\n      yaxis = list(\r\n        title = \"Income ($)\", tickformat = \"$,\",\r\n        automargin = TRUE, zeroline = TRUE, showline = TRUE, mirror = TRUE,\r\n        range = list(y_min, y_max)\r\n      ),\r\n      legend = list(x = 100, y = 0.5),\r\n      hovermode = \"x\"\r\n    )\r\n  return(p)\r\n}\r\n\r\n# Plot net incomes by Scenario\r\ncompare_net_income_plot <- function(input_data, weeks_in_year = 52L) {\r\n  income <- copy(input_data)\r\n  #convert weekly income to annual\r\n  income[, Net_Income_annual := Net_Income*weeks_in_year]\r\n  income[, Scenario := factor(Scenario, levels = unique(Scenario))]\r\n  \r\n  output_plot <- plot_ly(\r\n    data = income, x = ~gross_wage1_annual, y = ~Net_Income_annual, split = ~Scenario,\r\n    mode = \"lines\", type = \"scatter\", showlegend = TRUE,\r\n    line = list(color = tsy_palette, width = 3),\r\n    text = ~paste(\r\n      sprintf(\"<i>%s<\/i>\", Scenario),\r\n      sprintf(\r\n        \"<br><b>Weekly wage:<\/b> %s (%s hrs)\",\r\n        scales::dollar(gross_wage1, accuracy = 0.01),\r\n        scales::comma(hours1, accuracy = 0.1)\r\n      ),\r\n      sprintf(\"<br><b>Net weekly income:<\/b> %s\", scales::dollar(Net_Income)),\r\n      \"<br><b>Income breakdown<\/b>\",\r\n      \"<br>Net wage:\", scales::dollar(net_wage),\r\n      \"<br>Net benefit:\", scales::dollar(net_benefit),\r\n      \"<br>WFF:\", scales::dollar(WFF_abated),\r\n      \"<br>MFTC:\", scales::dollar(MFTC),\r\n      \"<br>IETC:\", scales::dollar(IETC_abated),\r\n      \"<br>Winter Energy:\", scales::dollar(WinterEnergy),\r\n      \"<br>Best start:\", scales::dollar(BestStart_Total),\r\n      \"<br>AS:\", scales::dollar(AS_Amount)\r\n    ),\r\n    hoverinfo = \"text\"\r\n  ) %>%\r\n    add_trace(\r\n      x = ~hours1, y = 0, xaxis = \"x2\", showlegend = FALSE, inherit = FALSE,\r\n      type = \"scatter\", mode = \"none\"\r\n    ) %>%\r\n    layout(\r\n      xaxis2 = list(\r\n        overlaying = \"x\", nticks = 10, side = \"top\",\r\n        title = \"Hours/week\", automargin = TRUE, size = 8, showline = TRUE\r\n      ),\r\n      xaxis = list(\r\n        title = \"Annual gross wage income ($)\",\r\n        tickformat = \"$,\", automargin = TRUE, showline = TRUE, mirror = TRUE\r\n      ),\r\n      yaxis = list(\r\n        title = \"Income ($)\", tickformat = \"$,\", \r\n        automargin = TRUE, showline = TRUE,  mirror = TRUE, rangemode = \"tozero\"\r\n      ),\r\n      legend = list(x = 100, y = 0.5),\r\n      hovermode = \"closest\"\r\n    )\r\n  return(output_plot)\r\n}\r\n\r\n# Plot rates by Scenario\r\nplot_rates <- function(input_data, rate_type, ylabel) {\r\n  income <- copy(input_data)\r\n  income[, Scenario := factor(Scenario, levels = unique(Scenario))]\r\n  \r\n  if (rate_type == \"PTR\") {\r\n    # Drop zero since PTR is undefined\r\n    income <- income[gross_wage1_annual != 0]\r\n  }\r\n  \r\n  output_plot <- plot_ly(\r\n    data = income, x = ~gross_wage1_annual, y = ~get(rate_type), split = ~Scenario,\r\n    mode = \"lines\", type = \"scatter\", showlegend = TRUE,\r\n    line = list(color = tsy_palette, width = 3),\r\n    text = ~paste(\r\n      sprintf(\"<i>%s<\/i>\", Scenario),\r\n      sprintf(\r\n        \"<br><b>Weekly wage:<\/b> %s (%s hrs)\",\r\n        scales::dollar(gross_wage1, accuracy = 0.01),\r\n        scales::comma(hours1, accuracy = 0.1)\r\n      ),\r\n      sprintf(\"<br><b>%s:<\/b> %s\", rate_type, scales::percent(get(rate_type), accuracy = 0.1)),\r\n      sprintf(\"<br><b>%s breakdown<\/b>\", rate_type),\r\n      \"<br>Wage Tax/ACC:\", scales::percent(get(paste0(rate_type, \"_net_wage\")), accuracy = 0.1),\r\n      \"<br>Benefit:\", scales::percent(get(paste0(rate_type, \"_net_benefit\")), accuracy = 0.1),\r\n      \"<br>WFF:\", scales::percent(get(paste0(rate_type, \"_WFF_abated\")), accuracy = 0.1),\r\n      \"<br>MFTC:\", scales::percent(get(paste0(rate_type, \"_MFTC\")), accuracy = 0.1),\r\n      \"<br>IETC:\", scales::percent(get(paste0(rate_type, \"_IETC_abated\")), accuracy = 0.1),\r\n      \"<br>Winter Energy:\", scales::percent(get(paste0(rate_type, \"_WinterEnergy\")), accuracy = 0.1),\r\n      \"<br>Best start:\", scales::percent(get(paste0(rate_type, \"_BestStart_Total\")), accuracy = 0.1),\r\n      \"<br>AS:\", scales::percent(get(paste0(rate_type, \"_AS_Amount\")), accuracy = 0.1)\r\n    ),\r\n    hoverinfo = \"text\"\r\n  ) %>%\r\n    add_trace(\r\n      x = ~hours1, y = ~0, xaxis = \"x2\", showlegend = FALSE, inherit = FALSE,\r\n      type = \"scatter\", mode = \"none\"\r\n    ) %>%\r\n    layout(\r\n      xaxis2 = list(\r\n        overlaying = \"x\", nticks = 10, side = \"top\",\r\n        title = \"Hours/week\", automargin = TRUE, size = 8, showline = TRUE\r\n      ),\r\n      xaxis = list(\r\n        title = \"Annual gross wage income ($)\",\r\n        tickformat = \"$,\", automargin = TRUE, showline = TRUE, mirror = TRUE\r\n      ),\r\n      yaxis = list(\r\n        title = ylabel, tickformat = \".0%\", \r\n        automargin = TRUE, showline = TRUE,  mirror = TRUE,\r\n        range = c(0, 1.1)\r\n      ),\r\n      legend = list(x = 100, y = 0.5),\r\n      hovermode = \"closest\"\r\n    )\r\n  return(output_plot)\r\n}\r\n\r\nremove_IWTC_from_params <- function(input_params) {\r\n  output_params <- copy(input_params)\r\n  output_params$FamilyAssistance_IWTC_Rates_UpTo3Children <- 0\r\n  output_params$FamilyAssistance_IWTC_Rates_SubsequentChildren <- 0\r\n  return(output_params)\r\n}\r\n\r\nchoose_IWTC_or_benefit <- function(X, X_without_IWTC) {\r\n  # Merge max\r\n  SQ_net_income_comparison <- cbind(\r\n    X[, .(With_IWTC = Net_Income)],\r\n    X_without_IWTC[, .(Without_IWTC = Net_Income)]\r\n  )\r\n  SQ_net_income_comparison[, row_ID := 1:.N]\r\n  With_IWTC_indices <- SQ_net_income_comparison[With_IWTC >= Without_IWTC, row_ID]\r\n  Without_IWTC_indices <- SQ_net_income_comparison[Without_IWTC > With_IWTC, row_ID]\r\n  \r\n  With_IWTC <- X[With_IWTC_indices]\r\n  Without_IWTC <- X_without_IWTC[Without_IWTC_indices]\r\n  \r\n  X <- rbind(With_IWTC, Without_IWTC, fill = TRUE)\r\n  setorderv(X, \"hours1\")\r\n  \r\n  X[, EMTR := 1 - 1L * (shift(Net_Income, 1L, type = \"lead\") - Net_Income)]\r\n  X[, EMTR := zoo::na.locf(EMTR)]\r\n  \r\n  return(X)\r\n}\r\n","type":"text"},{"name":"R/app_widgets.R","content":"fileInputButton <- function(\r\n    inputId, buttonLabel = \"Browse...\", icon = NULL,\r\n    multiple = FALSE, accept = NULL, width = NULL, capture = NULL\r\n)\r\n{\r\n  restoredValue <- restoreInput(id = inputId, default = NULL)\r\n  if (!is.null(restoredValue) && !is.data.frame(restoredValue)) {\r\n    warning(\"Restored value for \", inputId, \" has incorrect format.\")\r\n    restoredValue <- NULL\r\n  }\r\n  if (!is.null(restoredValue)) {\r\n    restoredValue <- toJSON(restoredValue, strict_atomic = FALSE)\r\n  }\r\n  inputTag <- tags$input(\r\n    id = inputId, class = \"shiny-input-file\",\r\n    name = inputId, type = \"file\",\r\n    style = \"position: absolute !important; top: -99999px !important; left: -99999px !important;\",\r\n    `data-restore` = restoredValue\r\n  )\r\n  if (multiple) \r\n    inputTag$attribs$multiple <- \"multiple\"\r\n  if (length(accept) > 0) \r\n    inputTag$attribs$accept <- paste(accept, collapse = \",\")\r\n  if (!is.null(capture)) {\r\n    inputTag$attribs$capture <- capture\r\n  }\r\n  tags$label(span(class = \"btn btn-default\", list(icon, buttonLabel), inputTag))\r\n}\r\n\r\nactionButtonLoading <- function(inputId, label, icon = NULL, ...) {\r\n  busy_loading_class <- \"fa-spinner fa-spin\"\r\n  js_loading_busy <- sprintf(\r\n    \"$('#%s').attr('disabled', true); $('#%s i').toggleClass('%s');\",\r\n    inputId, inputId, busy_loading_class\r\n  )\r\n  actionButton(inputId, label, icon, onclick = js_loading_busy, ...)\r\n}\r\n","type":"text"},{"name":"R/emtr.R","content":"parameters_from_file <- function(parameters_file) {\r\n  params_type <- tools::file_ext(parameters_file)\r\n  if (params_type %in% c(\"xlsx\", \"xls\")) {\r\n    parameters_df <- openxlsx::read.xlsx(parameters_file, sheet = 1) %>% as.data.frame()\r\n    parameters <- parameters_from_df(parameters_df)\r\n  } else if (params_type %in% c(\"yaml\", \"yml\")) {\r\n    parameters <- yaml::read_yaml(parameters_file)\r\n  } else {\r\n    error_msg <- paste0(\"Unsupported params type: \", params_type)\r\n    stop(error_msg)\r\n  }\r\n  # Rename any missing app parameters if possible\r\n  renamed_app_params <- c(\r\n    \"FamilyAssistance_FTC_Rates_FirstChild\" = \"FamilyAssistance_FTC_Rates_FirstChild0to15\",\r\n    \"FamilyAssistance_FTC_Rates_SubsequentChild\" = \"FamilyAssistance_FTC_Rates_SecondChild0to12\",\r\n    \"FamilyAssistance_IWTC_Eligibility\" = \"FamilyAssistance_IWTC_IncomeTest\",\r\n    \"FamilyAssistance_IWTC_IncomeThreshold_Couple\" = \"FamilyAssistance_IWTC_IncomeThreshold\",\r\n    \"FamilyAssistance_IWTC_IncomeThreshold_Single\" = \"FamilyAssistance_IWTC_IncomeThreshold\"\r\n  )\r\n  for (app_param in names(renamed_app_params)) {\r\n    if (!(app_param %in% names(parameters))) {\r\n      tawa_param <- renamed_app_params[[app_param]]\r\n      if (tawa_param %in% names(parameters)) {\r\n        print(sprintf(\"Copying %s to %s\", tawa_param, app_param))\r\n        parameters[[app_param]] <- parameters[[tawa_param]]\r\n      } else {\r\n        error_msg <- sprintf(\r\n          \"Missing parameter, neither app (%s) nor tawa (%s) parameter found \",\r\n          app_param, tawa_param\r\n        )\r\n        stop(error_msg)\r\n      }\r\n    }\r\n  }\r\n  # Add defaults for any missing system params\r\n  default_system_params <- list(\r\n    \"MFTC_WEP_scaling\" = 1,\r\n    \"WFF_or_Benefit\" = \"Max\"\r\n  )\r\n  for (app_param in names(default_system_params)) {\r\n    if (!(app_param %in% names(parameters))) {\r\n      parameters[[app_param]] <- default_system_params[[app_param]]\r\n    }\r\n  }\r\n  return(parameters)\r\n}\r\n\r\nparameters_from_df <- function(parameters_df, parameters_column = 2) {\r\n  \r\n  Params_text <- parameters_df[complete.cases(parameters_df), c(1, parameters_column)]\r\n  \r\n  # Replace the names\r\n  Params_text$Parameter <- gsub(\"\\\\+\", \"_\", gsub(\"/\", \"_\", Params_text$Parameter))\r\n  \r\n  # Clean up the parameters\r\n  Params_text[, 2] <- gsub(\"\\\\\\\\\", \"/\", Params_text[, 2])\r\n  Params_text[, 2] <- gsub(\"\\\\[\\\\[\", \"rbind(c(\", Params_text[, 2])\r\n  Params_text[, 2] <- gsub(\"\\\\[\", \"c(\", Params_text[, 2])\r\n  Params_text[, 2] <- gsub(\"]\", \")\", Params_text[, 2])\r\n  Params_text[, 2] <- gsub(\";\", \",\", Params_text[, 2])\r\n  Params_text[, 2] <- gsub(\"'\", \"\", Params_text[, 2])\r\n  \r\n  Parameters <- vector(mode = \"list\", length = dim(Params_text)[1])\r\n  names(Parameters) <- Params_text$Parameter\r\n  \r\n  for (i in 1:nrow(Params_text)) {\r\n    if (!is.na(suppressWarnings(as.numeric(Params_text[i, 2])))) {\r\n      Parameters[[Params_text[i, 1]]] <- suppressWarnings(as.numeric(Params_text[i, 2]))\r\n    } else if (grepl(\"rbind\", Params_text[i, 2])) {\r\n      # AbatementScale or TaxScale - convert to list with thresholds and rates\r\n      a_matrix <- eval(parse(text = Params_text[i, 2]))\r\n      Parameters[[Params_text[i, 1]]] <- list(thresholds = a_matrix[, 1], rates = a_matrix[, 2])\r\n    } else {\r\n      Parameters[[Params_text[i, 1]]] <- Params_text[i, 2]\r\n    }\r\n  }\r\n  \r\n  return(Parameters)\r\n}\r\n\r\n\r\n\r\nwks_in_year <- function(year) {\r\n  is_leap_year <- (!(year %% 4) & (year %% 100)) | !(year %% 400)\r\n  if (is_leap_year) {\r\n    weeks <- 366/7\r\n  } else {\r\n    weeks <- 365/7\r\n  }\r\n  return(weeks)\r\n}\r\n\r\nemtr <- function(\r\n  # System parameters\r\n  Parameters,\r\n  # Family parameters\r\n  Partnered = FALSE,\r\n  wage1_hourly = 16.50,\r\n  Children_ages = c(),\r\n  gross_wage2 = 0,\r\n  hours2 = 0,\r\n  AS_Accommodation_Costs = 0,\r\n  AS_Accommodation_Rent = TRUE,\r\n  AS_Area = 1L,\r\n  # Presentation parameters\r\n  max_wage = 1900,\r\n  steps_per_dollar = 1L,\r\n  weeks_in_year = NULL,\r\n  MFTC_WEP_scaling = NULL,\r\n  pov_thresholds = 0.5,\r\n  bhc_median = 43000,\r\n  ahc_median = 33100) {\r\n  \r\n  # Work out length of the year\r\n  model_year <- Parameters$modelyear\r\n  \r\n  if (is.null(weeks_in_year)){\r\n    weeks_in_year <- wks_in_year(model_year)\r\n  }\r\n  if (is.null(MFTC_WEP_scaling)) {\r\n    MFTC_WEP_scaling <- 1/weeks_in_year\r\n  } else {\r\n    MFTC_WEP_scaling <- MFTC_WEP_scaling / weeks_in_year\r\n  }\r\n  \r\n  # Pull AS MaxRates together\r\n  AS_MaxRate_Mortgage <- matrix(data=c(\r\n    Parameters$Accommodation_MaxRate_CoupleDeps_Single2_Deps_Area1,\r\n    Parameters$Accommodation_MaxRate_CoupleDeps_Single2_Deps_Area2,\r\n    Parameters$Accommodation_MaxRate_CoupleDeps_Single2_Deps_Area3,\r\n    Parameters$Accommodation_MaxRate_CoupleDeps_Single2_Deps_Area4,\r\n    Parameters$Accommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1,\r\n    Parameters$Accommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2,\r\n    Parameters$Accommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3,\r\n    Parameters$Accommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4,\r\n    Parameters$Accommodation_MaxRate_SingleNoDeps_Area1,\r\n    Parameters$Accommodation_MaxRate_SingleNoDeps_Area2,\r\n    Parameters$Accommodation_MaxRate_SingleNoDeps_Area3,\r\n    Parameters$Accommodation_MaxRate_SingleNoDeps_Area4\r\n  ),  nrow=4, ncol=3)\r\n  \r\n  AS_MaxRate_Rent <- matrix(data=c(\r\n    Parameters$Accommodation_MaxRate_CoupleDeps_Single2_Deps_Area1,\r\n    Parameters$Accommodation_MaxRate_CoupleDeps_Single2_Deps_Area2,\r\n    Parameters$Accommodation_MaxRate_CoupleDeps_Single2_Deps_Area3,\r\n    Parameters$Accommodation_MaxRate_CoupleDeps_Single2_Deps_Area4,\r\n    Parameters$Accommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1,\r\n    Parameters$Accommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2,\r\n    Parameters$Accommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3,\r\n    Parameters$Accommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4,\r\n    Parameters$Accommodation_MaxRate_SingleNoDeps_Area1,\r\n    Parameters$Accommodation_MaxRate_SingleNoDeps_Area2,\r\n    Parameters$Accommodation_MaxRate_SingleNoDeps_Area3,\r\n    Parameters$Accommodation_MaxRate_SingleNoDeps_Area4\r\n  ),  nrow=4, ncol=3)\r\n  \r\n  # Count and categorise children\r\n  N_kids <- length(Children_ages)\r\n  BS_abating_kids <- sum(Children_ages==1L) * (model_year >= 2020) +\r\n    sum(Children_ages==2L) * (model_year >= 2021)\r\n  \r\n  BS_nonabating_kids <- sum(Children_ages==0L) * (model_year >= 2019)\r\n\r\n  # Convert tax and abatement schedules to weekly -------------------------------\r\n  # Note that benefit abatement scales in TAWA parameters are weekly values scaled to annual assuming a 52.2 week year\r\n  # Other amounts are annual values, and weekly values are obtained by dividing by the number of weeks in a year,\r\n  # except where the legislation specifies otherwise.\r\n  convert_scale_to_weekly <- function(Scale, wks_in_year = 52L) {\r\n    Scale_Weekly <- Scale\r\n    Scale_Weekly$thresholds <- Scale_Weekly$thresholds / wks_in_year\r\n    return(Scale_Weekly)\r\n  }\r\n  \r\n  Tax_BaseScale_Weekly <-\r\n    convert_scale_to_weekly(Parameters$Tax_BaseScale, weeks_in_year)\r\n  Benefits_SPS_AbatementScale_Weekly <-\r\n    convert_scale_to_weekly(Parameters$Benefits_SPS_AbatementScale, 52.2)\r\n  Benefits_JSS_AbatementScale_Weekly <-\r\n    convert_scale_to_weekly(Parameters$Benefits_JSS_AbatementScale, 52.2)\r\n  Benefits_JSS_CoupleAbatementScale_Weekly <-\r\n    convert_scale_to_weekly(Parameters$Benefits_JSS_CoupleAbatementScale, 52.2)\r\n  FamilyAssistance_Abatement_AbatementScale_Weekly <-\r\n    convert_scale_to_weekly(Parameters$FamilyAssistance_Abatement_AbatementScale, 365/7)\r\n  IETC_AbatementScale_Weekly <-\r\n    convert_scale_to_weekly(Parameters$IETC_AbatementScale, weeks_in_year)\r\n  IWTC_PhaseInScale_Single_Weekly<-\r\n    convert_scale_to_weekly(Parameters$FamilyAssistance_IWTC_PhaseIn_Single, 52.2)\r\n  IWTC_PhaseInScale_Couple_Weekly<-\r\n    convert_scale_to_weekly(Parameters$FamilyAssistance_IWTC_PhaseIn_Couple, 52.2)  \r\n  FamilyAssistance_BestStart_Abatement_AbatementScale_Weekly <-\r\n    convert_scale_to_weekly(Parameters$FamilyAssistance_BestStart_Abatement_AbatementScale, 365/7)\r\n\r\n  \r\n  \r\n  # Convert rates to weekly------------------------------------------------------\r\n  ACC_max_Weekly <- Parameters$ACC_MaxLeviableIncome / weeks_in_year\r\n  FTC_eldest <- Parameters$FamilyAssistance_FTC_Rates_FirstChild / (365/7)\r\n  FTC_subsequent <- Parameters$FamilyAssistance_FTC_Rates_SubsequentChild / (365/7)\r\n  IWTC_first3 <- Parameters$FamilyAssistance_IWTC_Rates_UpTo3Children / 52L\r\n  IWTC_subsequent <- Parameters$FamilyAssistance_IWTC_Rates_SubsequentChildren / 52L\r\n  IETC_rate <- Parameters$IETC_PerYear / weeks_in_year\r\n  IETC_minimum_income <- Parameters$IETC_MinimalIncome / weeks_in_year\r\n  BS_Rate0 <- Parameters$FamilyAssistance_BestStart_Rates_Age0 / (365/7)\r\n  \r\n  BS_Rate1or2 <- Parameters$FamilyAssistance_BestStart_Rates_Age1or2 / (365/7)\r\n  \r\n  WE_Couple_or_Deps_amount <- Parameters$Benefits_WinterEnergy_Rates_CoupleOrDeps*\r\n    MFTC_WEP_scaling\r\n  \r\n  WE_Single_amount <- Parameters$Benefits_WinterEnergy_Rates_Single*\r\n    MFTC_WEP_scaling\r\n  \r\n  MFTC_amount <- Parameters$FamilyAssistance_MFTC_Rates_MinimumIncome / 52L\r\n  \r\n  # Calculate inverse thresholds for the tax system (weekly)\r\n  NIT <- Net_Thresholds(Parameters$Tax_BaseScale)\r\n  \r\n  # Assign benefit rates and abatement schedules ------------------------\r\n  if (Partnered == TRUE) {\r\n    # Couple family \r\n    if (N_kids == 0L) {\r\n      # No kids \r\n      Benefit1_Net_0hrs <- Parameters$Benefits_JSS_Rate_Couple\r\n      Benefit2_Net_0hrs <- Parameters$Benefits_JSS_Rate_Couple\r\n      Benefit_Abatement_Scale <- Benefits_JSS_CoupleAbatementScale_Weekly\r\n    } else {\r\n      # At least one kid\r\n      Benefit1_Net_0hrs <- Parameters$Benefits_JSS_Rate_CoupleParent\r\n      Benefit2_Net_0hrs <- Parameters$Benefits_JSS_Rate_CoupleParent\r\n      Benefit_Abatement_Scale <- Benefits_JSS_CoupleAbatementScale_Weekly\r\n    }\r\n    \r\n  } else {\r\n    # Single family \r\n    Benefit2_Net_0hrs <- 0\r\n    if (N_kids == 0) {\r\n      # No kids\r\n      Benefit1_Net_0hrs <- Parameters$Benefits_JSS_Rate_Single\r\n      Benefit_Abatement_Scale <- Benefits_JSS_AbatementScale_Weekly\r\n      \r\n    } else {\r\n      # At least one kid\r\n      if (min(Children_ages) < Parameters$Benefits_Entitlement_Age_SPS_ChildLowerBound) {\r\n        Benefit1_Net_0hrs <- Parameters$Benefits_SPS_Rate\r\n        Benefit_Abatement_Scale <- Benefits_SPS_AbatementScale_Weekly\r\n      } else {\r\n        # Special case for sole parent whose youngest children is older than\r\n        # Benefits_Entitlement_Age_SPS_ChildLowerBound so the rate is based on JSS,\r\n        # But AbatementScale is based on SPS\r\n        Benefit1_Net_0hrs <- Parameters$Benefits_JSS_Rate_SoleParent\r\n        Benefit_Abatement_Scale <- Benefits_SPS_AbatementScale_Weekly # NB!\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  # Assign AS abatement point, entry threshold, and maximum --------------------\r\n  if (N_kids > 0L & !Partnered) {\r\n    AS_Abate_Point <- \r\n      ceiling(weeks_in_year *\r\n                Abatement_Vanishing_Point(Benefits_JSS_AbatementScale_Weekly, \r\n                                          Parameters$Benefits_JSS_Rate_SoleParent))/weeks_in_year\r\n  }else{\r\n    AS_Abate_Point <-\r\n      ceiling(weeks_in_year * \r\n              Abatement_Vanishing_Point(Benefit_Abatement_Scale,\r\n                                        Benefit1_Net_0hrs))/weeks_in_year\r\n  }\r\n  \r\n  AS_entry_threshold <- \r\n    ifelse(AS_Accommodation_Rent,\r\n           Parameters$Accommodation_BaseRateThreshold_Rent,\r\n           Parameters$Accommodation_BaseRateThreshold_Mortgage) *\r\n    ((Benefit1_Net_0hrs + Benefit2_Net_0hrs) + (N_kids > 0L) * FTC_eldest)\r\n  \r\n  \r\n  if (AS_Accommodation_Rent){\r\n    AS_Maximum <-\r\n      AS_MaxRate_Rent[AS_Area, pmax(2L - N_kids - 1L * Partnered, 0L) + 1L]\r\n  } else {\r\n    AS_Maximum <-\r\n      AS_MaxRate_Mortgage[AS_Area, pmax(2L - N_kids - 1L * Partnered, 0L) + 1L]\r\n  }\r\n  \r\n  # Initiate the output table --------------------------------------------------\r\n  X <- data.table(gross_wage1 = seq(0, max_wage, 1 / steps_per_dollar))\r\n  X[, hours1 := gross_wage1 / wage1_hourly]\r\n  X[, gross_wage1_annual := weeks_in_year * gross_wage1]\r\n  \r\n  # Partner wage ---------------------------------------------------------------\r\n  X[, gross_wage2 := gross_wage2]\r\n\r\n  # These are zero by default --------------------------------------------------\r\n  X[, wage2_tax := 0]\r\n  X[, wage2_ACC_levy := 0]\r\n  X[, net_wage2 := 0]\r\n  X[, net_benefit2 := 0]\r\n  X[, gross_benefit2 := 0]\r\n\r\n  X[, IETC_abated1 := 0]\r\n  X[, IETC_abated2 := 0]\r\n\r\n  # Abate benefit --------------------------------------------------------------\r\n  X[, net_benefit1 := \r\n      Abate(TRUE, Benefit1_Net_0hrs, \r\n            Benefit_Abatement_Scale, gross_wage1 + gross_wage2)]\r\n\r\n  \r\n  \r\n  if (Partnered){\r\n    X[, net_benefit2 := Abate(TRUE, Benefit2_Net_0hrs, Benefit_Abatement_Scale,\r\n                              gross_wage1+gross_wage2)]\r\n  }\r\n  \r\n  # Assign IWTC ----------------------------------------------------------------\r\n  # Parameters$FamilyAssistance_IWTC_Eligibility\r\n  #  0 : hours test and do not give to beneficiaries\r\n  #  1 : income test\r\n  #  2 : phase in \r\n  if (Parameters$FamilyAssistance_IWTC_Eligibility == 1){\r\n    # Use income test \r\n    \r\n    # Assign income test based on single/couple\r\n    if (Partnered == TRUE){\r\n      IWTC_IncomeThreshold <- Parameters$FamilyAssistance_IWTC_IncomeThreshold_Couple/52.2\r\n    } else {\r\n      IWTC_IncomeThreshold <- Parameters$FamilyAssistance_IWTC_IncomeThreshold_Single/52.2\r\n    }\r\n    \r\n    # Eligible if have children and wage exceeds the threshold\r\n    X[, IWTC_eligible := 1L * (N_kids > 0L) * ((gross_wage1 + gross_wage2) >=\r\n                                                 IWTC_IncomeThreshold)]\r\n    \r\n    # Calculate unabated IWTC\r\n    X[, IWTC_unabated := IWTC_eligible * (IWTC_first3 + max(0L, N_kids - 3L) *\r\n                                            IWTC_subsequent)]\r\n    \r\n    # Parameters$FamilyAssistance_IWTC_ToBeneficiaries determines if beneficiaries are eligible for IWTC\r\n    # 0 : Not eligible\r\n    # 1 : Eligible\r\n    if (Parameters$FamilyAssistance_IWTC_ToBeneficiaries == 0){\r\n      # If IWTC eligible, zero out benefit\r\n      X[IWTC_unabated>0, \r\n        `:=`(net_benefit1 = 0,  net_benefit2 = 0)]\r\n    }\r\n    \r\n    # tidy up\r\n    X[, IWTC_eligible := NULL]\r\n    \r\n  } else if (Parameters$FamilyAssistance_IWTC_Eligibility == 2){\r\n    # Use phase-in method \r\n    \r\n    # Phase in scale\r\n    if (Partnered == TRUE){\r\n      IWTC_PhaseInScale_Weekly <- IWTC_PhaseInScale_Couple_Weekly\r\n    } else {\r\n      IWTC_PhaseInScale_Weekly <- IWTC_PhaseInScale_Single_Weekly\r\n    }\r\n    # Maximum amount\r\n    IWTC_max <- IWTC_first3 + max(0L, N_kids - 3L) * IWTC_subsequent\r\n    \r\n    # Calcuated phased-in/unabated amount\r\n    X[, IWTC_unabated := (N_kids > 0L)*\r\n        pmin(IWTC_max,\r\n             Abate(TRUE, 0, IWTC_PhaseInScale_Weekly, gross_wage1+gross_wage2))]\r\n  } else {\r\n    # Hours test and do not give to beneficiaries\r\n    \r\n    # Hours threshold\r\n    if (Partnered == TRUE){ \r\n      FullTimeWorkingHours <- Parameters$FamilyAssistance_FullTimeWorkingHours_Couple\r\n      \r\n    } else {\r\n      FullTimeWorkingHours <- Parameters$FamilyAssistance_FullTimeWorkingHours_Single\r\n    }\r\n    \r\n    X[, IWTC_eligible := 1L * (N_kids > 0L) * ((hours1 + hours2) >= FullTimeWorkingHours)]\r\n    \r\n    # Calculate unabated IWTC\r\n    X[, IWTC_unabated := IWTC_eligible * (IWTC_first3 + max(0L, N_kids - 3L) *\r\n                                            IWTC_subsequent)]\r\n    \r\n    # If receiving IWTC, zero out benefit\r\n    X[IWTC_unabated >0, \r\n      `:=`(net_benefit1 = 0, net_benefit2 = 0)]\r\n    \r\n    # tidy up\r\n    X[, IWTC_eligible := NULL]\r\n  }\r\n  \r\n  # Back out Gross benefit\r\n  X[, gross_benefit1 := Gross_From_Net(net_benefit1, NIT, Tax_BaseScale_Weekly)]\r\n  X[, gross_benefit1 := Gross_From_Net(net_benefit1, NIT, Tax_BaseScale_Weekly)]\r\n\r\n  \r\n  if (Partnered){\r\n    X[, gross_benefit2 := Gross_From_Net(net_benefit2, NIT, Tax_BaseScale_Weekly)]\r\n  }\r\n  \r\n  # Add wage on to benefit and tax\r\n  X[, gross_benefit_and_wage1 := gross_benefit1 + gross_wage1]\r\n  X[, net_benefit_and_wage1 := Net_From_Gross(gross_benefit_and_wage1, Tax_BaseScale_Weekly)]\r\n  X[, wage1_tax := (gross_benefit_and_wage1 - net_benefit_and_wage1) - \r\n      (gross_benefit1 - net_benefit1)]\r\n  \r\n  if (Partnered) {\r\n    X[, gross_benefit_and_wage2 := gross_benefit2 + gross_wage2]\r\n    X[, net_benefit_and_wage2 := Net_From_Gross(gross_benefit_and_wage2, Tax_BaseScale_Weekly)]\r\n    X[, wage2_tax := (gross_benefit_and_wage2 - net_benefit_and_wage2) - (gross_benefit2 - net_benefit2)]\r\n  }\r\n  \r\n  # Work out ACC levy\r\n  X[, wage1_ACC_levy := pmin(gross_wage1,ACC_max_Weekly)*Parameters$ACC_LevyRate]\r\n  \r\n  if (Partnered){\r\n    X[, wage2_ACC_levy := pmin(gross_wage2,ACC_max_Weekly)*Parameters$ACC_LevyRate]\r\n  }\r\n  \r\n  # Form net wage\r\n  X[, net_wage1 := gross_wage1 - wage1_tax - wage1_ACC_levy]\r\n  \r\n  if (Partnered){\r\n    X[, net_wage2 := gross_wage2 - wage2_tax - wage2_ACC_levy]\r\n  }\r\n  \r\n  # Form unabated FTC\r\n  X[, FTC_unabated := (N_kids>0L)*FTC_eldest+max(N_kids-1L,0L)*FTC_subsequent]\r\n  \r\n  \r\n  \r\n  # Hours test for MFTC ------------\r\n  \r\n  # Hours threshold\r\n  if (Partnered == TRUE){ \r\n    FullTimeWorkingHours <- Parameters$FamilyAssistance_FullTimeWorkingHours_Couple\r\n    \r\n  } else {\r\n    FullTimeWorkingHours <- Parameters$FamilyAssistance_FullTimeWorkingHours_Single\r\n  }\r\n  \r\n  \r\n  X[, MFTC_eligible :=  (N_kids > 0L) &\r\n      ((hours1 + hours2) >= FullTimeWorkingHours) &\r\n      ((net_benefit1 + net_benefit2) == 0)]\r\n  \r\n  \r\n  # Work out MFTC amount (if benefit == 0)\r\n  X[, MFTC := MFTC_eligible *\r\n      (pmax(MFTC_amount - (gross_wage1 + gross_wage2 - wage1_tax - wage2_tax),0))]\r\n  \r\n  \r\n  # tidy up\r\n  X[, MFTC_eligible := NULL]\r\n  \r\n  \r\n  # Abate FTC and IWTC ------------\r\n  X[, AbateAmount :=\r\n      Apply(gross_wage1 + gross_wage2 + gross_benefit1 + gross_benefit2,\r\n            FamilyAssistance_Abatement_AbatementScale_Weekly)]\r\n  \r\n  \r\n  # If FamilyAssistance_Abatement_Order has not been defined\r\n  # then define it with default value: 0\r\n  # So old parameter files should still work \r\n  if(is.null(Parameters$FamilyAssistance_Abatement_Order)){\r\n    Parameters$FamilyAssistance_Abatement_Order <- 0\r\n  }\r\n  \r\n  # Changing the order FTC and IWTC abatement ---------------------\r\n  if(Parameters$FamilyAssistance_Abatement_Order == 0){\r\n    # Abate FTC first then IWTC\r\n    X[, FTC_abated := pmax(0, FTC_unabated - AbateAmount)]\r\n    X[, RemainingAbatement := pmax(0, AbateAmount - FTC_unabated)]\r\n    X[, IWTC_abated := pmax(0, IWTC_unabated - RemainingAbatement)]\r\n  } else{\r\n    # Abate IWTC first then FTC\r\n    X[, IWTC_abated := pmax(0, IWTC_unabated - AbateAmount)]\r\n    X[, RemainingAbatement := pmax(0, AbateAmount - IWTC_unabated)]\r\n    X[, FTC_abated := pmax(0, FTC_unabated - RemainingAbatement)]\r\n  }\r\n  \r\n  # tidy up\r\n  X[, RemainingAbatement := NULL]\r\n  \r\n  # If receiving best start they shouldn’t be able to receive IETC ---------------\r\n  # Best Start ------------\r\n  X[, BestStart_Universal := BS_nonabating_kids*BS_Rate0]\r\n  X[, BestStart_Abated := Abate(TRUE, BS_abating_kids*BS_Rate1or2,\r\n                                FamilyAssistance_BestStart_Abatement_AbatementScale_Weekly,\r\n                                gross_wage1+gross_wage2+gross_benefit1+gross_benefit2)]\r\n  X[, BestStart_Total := BestStart_Universal + BestStart_Abated]\r\n  \r\n  \r\n  # Work out IETC -----------\r\n  X[, IETC_eligible1 := (net_benefit1 == 0) & (FTC_abated == 0) &\r\n      (IWTC_abated == 0) & (MFTC == 0) & (BestStart_Total == 0) &\r\n      (gross_wage1 >= IETC_minimum_income)]\r\n  \r\n  X[IETC_eligible1 == TRUE, \r\n    IETC_abated1 := Abate(TRUE, IETC_rate, IETC_AbatementScale_Weekly, \r\n                          gross_wage1)]\r\n  \r\n  \r\n  X[, IETC_eligible2 := (net_benefit2 == 0) & (FTC_abated == 0) & \r\n      (IWTC_abated == 0) & (MFTC == 0) & (BestStart_Total == 0) & \r\n      (gross_wage2 >= IETC_minimum_income)]\r\n  \r\n  \r\n  X[IETC_eligible2 == TRUE, \r\n    IETC_abated2 := Abate(TRUE, IETC_rate, IETC_AbatementScale_Weekly, gross_wage2)]\r\n   \r\n  \r\n  X[Parameters$IETC_OnlyFamiliesWithoutChildren == TRUE & N_kids > 0L, \r\n    ':=' (IETC_abated1 = 0,\r\n          IETC_abated2 = 0)]\r\n  \r\n  # tidy up\r\n  X[, IETC_eligible1 := NULL]\r\n  X[, IETC_eligible2 := NULL]\r\n  \r\n  \r\n  \r\n  \r\n  # Winter Energy --------\r\n  X[, WE_Couple_or_Deps := 0]\r\n  X[, WE_Single := 0]\r\n  \r\n  X[, WE_eligible := (net_benefit1 + net_benefit2) > 0]\r\n  \r\n  X[, WE_Couple_or_Deps_eligible := WE_eligible == TRUE & \r\n      (N_kids > 0L | Partnered)]\r\n\r\n  X[WE_Couple_or_Deps_eligible == TRUE,\r\n    WE_Couple_or_Deps := WE_Couple_or_Deps_amount]\r\n\r\n  X[, WE_Single_eligible :=  WE_eligible == TRUE & \r\n      ((!Partnered) & N_kids == 0L)]\r\n\r\n  X[WE_eligible == TRUE & WE_Single_eligible == TRUE,\r\n    WE_Single := WE_Single_amount]\r\n  \r\n  X[, WinterEnergy := WE_Couple_or_Deps +  WE_Single]\r\n\r\n  # tidy up\r\n  X[, WE_eligible := NULL]\r\n  X[, WE_Couple_or_Deps := NULL]\r\n  X[, WE_Couple_or_Deps_eligible := NULL]\r\n  X[, WE_Single := NULL]\r\n  X[, WE_Single_eligible := NULL]\r\n  \r\n  # Accommodation Supplement -----------\r\n  X[, AS_Amount := pmax(\r\n    pmin(Parameters$Accommodation_PaymentPercentage * (AS_Accommodation_Costs - AS_entry_threshold),\r\n         AS_Maximum) -\r\n      pmax(gross_wage1 + gross_wage2 - AS_Abate_Point, 0) * \r\n      Parameters$Accommodation_AbatementRate * ((net_benefit1 + net_benefit2) == 0), 0)]\r\n  \r\n  # Combo columns\r\n  X[, \":=\"(\r\n    net_wage = net_wage1 + net_wage2,\r\n    net_benefit = net_benefit1 + net_benefit2,\r\n    benefit_tax = -(gross_benefit1 + gross_benefit2 - net_benefit1 - net_benefit2),\r\n    gross_wage = gross_wage1 + gross_wage2,\r\n    wage_tax_and_ACC = -(wage1_tax + wage2_tax + wage1_ACC_levy + wage2_ACC_levy),\r\n    IETC_abated = IETC_abated1 + IETC_abated2,\r\n    WFF_abated = FTC_abated + IWTC_abated\r\n  )]\r\n  \r\n  # Net income\r\n  net_income_components <- c(\r\n    \"net_wage\",\r\n    \"net_benefit\",\r\n    \"WFF_abated\",\r\n    \"MFTC\",\r\n    \"IETC_abated\",\r\n    \"WinterEnergy\",\r\n    \"BestStart_Total\",\r\n    \"AS_Amount\"\r\n  )\r\n  X[, Net_Income := rowSums(.SD), .SDcols = net_income_components]\r\n  \r\n  # EMTR, including decomposition\r\n  get_emtr <- function(net_income, next_net_income) {\r\n    emtr <- 1 - steps_per_dollar*(next_net_income - net_income)\r\n    emtr <- zoo::na.locf(emtr)\r\n    return(emtr)\r\n  }\r\n  X[, EMTR := get_emtr(Net_Income, shift(Net_Income, 1L, type = \"lead\"))]\r\n  \r\n  X[, paste0(\"EMTR_\", net_income_components) := lapply(.SD, function(net_income_component) {\r\n    emtr_component <- get_emtr(\r\n      net_income = net_income_component,\r\n      next_net_income = shift(net_income_component, 1L, type = \"lead\")\r\n    ) - 1 # Subtract 1 from components\r\n    return(emtr_component)\r\n  }), .SDcols = net_income_components]\r\n  X[, EMTR_net_wage := EMTR_net_wage + 1] # Add 1 back for the main component\r\n  \r\n  # Replacement rate - note not linear in Net_Income,\r\n  # so for decomposition let's fix the working net income\r\n  get_rr <- function(non_working_net_income, working_net_income) {\r\n    rr <- non_working_net_income / working_net_income\r\n    return(rr)\r\n  }\r\n  X[, RR := get_rr(first(Net_Income), Net_Income)]\r\n  \r\n  X[, paste0(\"RR_\", net_income_components) := lapply(.SD, function(net_income_component) {\r\n    get_rr(\r\n      non_working_net_income = first(net_income_component),\r\n      working_net_income = Net_Income # Keep this fixed when calculating components\r\n    )\r\n  }), .SDcols = net_income_components]\r\n  \r\n  # Participation tax rate, including decomposition\r\n  get_ptr <- function(net_income, gross_income) {\r\n    ptr <- 1 - (net_income - first(net_income)) / gross_income\r\n    return(ptr)\r\n  }\r\n  X[, PTR := get_ptr(Net_Income, gross_wage1 + gross_wage2)]\r\n  \r\n  X[, paste0(\"PTR_\", net_income_components) := lapply(.SD, function(net_income_component) {\r\n    get_ptr(\r\n      net_income = net_income_component,\r\n      gross_income = gross_wage1 + gross_wage2\r\n    ) - 1 # Subtract 1 from components\r\n  }), .SDcols = net_income_components]\r\n  X[, PTR_net_wage := PTR_net_wage + 1] # Add 1 back for the main component\r\n  \r\n  # As in TAWA proc the disposable income is calculated as: \r\n  # P_Income_Total + P_FamilyAssistance_Total + P_TaxCredit_IETC - P_Income_TaxPayable - P_ACC_LevyPayable\r\n  # Same definition as \"Net_Income\", so use \"Net_Income\" as disposable income.\r\n  \r\n  # Number of children under 14\r\n  LT_14 <- sum(Children_ages < 14)\r\n  \r\n  # Number of children over 14\r\n  GTE_14 <- sum( Children_ages >= 14) + ifelse(Partnered == FALSE, 1, 2)\r\n  \r\n  # Modified OECD\r\n  moecd_eq_factor <- 1 + 0.5 * (GTE_14 - 1) + 0.3 * (LT_14)\r\n  \r\n  # Equivalised Income\r\n  X[, Equivalised_Income := Net_Income / moecd_eq_factor]\r\n\r\n  # BHC Depth\r\n  X[, BHC_Depth := (moecd_eq_factor * (pov_thresholds*bhc_median - pmax(0, Equivalised_Income*weeks_in_year)))/weeks_in_year]\r\n \r\n  # After housing cost disposable income\r\n  X[, AHC_Net_Income := Net_Income - AS_Accommodation_Costs]\r\n  \r\n  # Equivalised Income\r\n  X[, AHC_Equivalised_Income := AHC_Net_Income / moecd_eq_factor]\r\n  \r\n  # AHC Depth\r\n  X[, AHC_Depth := (moecd_eq_factor * (pov_thresholds*ahc_median - pmax(0, AHC_Equivalised_Income*weeks_in_year)))/weeks_in_year]\r\n  \r\n  # Unequivalised median\r\n  X[, \":=\" (BHC_Unequiv_Poverty_Line = pov_thresholds * moecd_eq_factor * bhc_median,\r\n            AHC_Unequiv_Poverty_Line = pov_thresholds * moecd_eq_factor * ahc_median,\r\n            Eq_Factor = moecd_eq_factor)]\r\n  \r\n  return(X)\r\n}\r\n\r\n\r\n","type":"text"},{"name":"R/estimate_MFTC_rates.R","content":"##### Find Net income crossing for staying on benefit vs getting IWTC ####\r\n## Then MFTC is the gross_wage - wage_tax + net_income_diff amount\r\n## at the point just before the crossing.\r\n\r\nfind_MFTC <- function(\r\n  emtr_on_ben,\r\n  emtr_working,\r\n  min_wage,\r\n  ben_hours_test\r\n) {\r\n  wage_threshold <- min_wage*ben_hours_test\r\n  start_index <- emtr_on_ben[gross_wage1 < wage_threshold, .N]\r\n  \r\n  # Check if there is a crossing\r\n  net_income_diff <-\r\n    emtr_on_ben[gross_wage1 >= wage_threshold, Net_Income] -\r\n      emtr_working[gross_wage1 >= wage_threshold, Net_Income]\r\n  MFTC_required <- any(net_income_diff > 0) & any(net_income_diff < 0)\r\n  \r\n  if (!MFTC_required) {\r\n    print(\"MFTC not required\")\r\n    proposed_MFTC <- NA\r\n  } else {\r\n    relative_crossing_index <- which(net_income_diff < 0)[1] - 1\r\n    crossing_index <- start_index + relative_crossing_index\r\n    \r\n    boost <- net_income_diff[relative_crossing_index]\r\n    \r\n    proposed_MFTC_weekly <- emtr_working[\r\n      crossing_index, gross_wage1 - wage1_tax + gross_wage2 - wage2_tax + boost\r\n    ]\r\n    proposed_MFTC <- ceiling(proposed_MFTC_weekly)*52L\r\n    if (is.na(proposed_MFTC)) {\r\n      stop(\"MFTC estimated to be NA but there should have been a zero crossing\")\r\n    }\r\n  }\r\n  return(proposed_MFTC)\r\n}\r\n\r\n#' Estimate MFTC rates for a given parameter file\r\n#'\r\n#' @param parameter_file Parameter file (*.xlsx) in the IncomeExplorer format\r\n#'                       supported by the `emtr` function\r\n#' @param min_wage Minimum wage\r\n#' @param steps_per_dollar Number of steps to calculate, per dollar of gross earned income\r\n#' @param WEP_scaling Scaling of the annual Winter Energy amount.\r\n#'                    Prior to Budget 2021, was 12/5 (annualised winter week).\r\n#'                    Since Budget 2021, defaults to 1 (average over year).\r\n#'\r\n#' @return\r\n#' @export\r\n#'\r\n#' @examples\r\nestimate_MFTC_rates <- function(\r\n  parameter_file,\r\n  min_wage,\r\n  steps_per_dollar = 1L,\r\n  WEP_scaling = 1\r\n) {\r\n  parameters <- parameters_from_file(parameter_file)\r\n\r\n  # Parameters for family working and not on benefit (IWTC not turned off)\r\n  parameters_NoMFTC <- copy(parameters)\r\n  parameters_NoMFTC$FamilyAssistance_MFTC_Rates_MinimumIncome <- 0\r\n  \r\n  # Parameters for family on Benefit and working (IWTC turned off)\r\n  parameters_NoMFTC_NoIWTC <- copy(parameters_NoMFTC)\r\n  parameters_NoMFTC_NoIWTC$FamilyAssistance_IWTC_Rates_UpTo3Children <- 0\r\n  parameters_NoMFTC_NoIWTC$FamilyAssistance_IWTC_Rates_SubsequentChildren <- 0\r\n  \r\n  ##### Family 1 - JSS couple, 50/50 income split\r\n  MFTC_Couple_5050_working <- emtr(\r\n    parameters_NoMFTC,\r\n    Partnered = T,\r\n    wage1_hourly = min_wage,\r\n    Children_ages = c(10),\r\n    gross_wage2 = min_wage*15,\r\n    hours2 = 15,\r\n    AS_Accommodation_Costs = 0,\r\n    AS_Accommodation_Rent = T,\r\n    AS_Area = 1L,\r\n    max_wage = min_wage*50,\r\n    steps_per_dollar = steps_per_dollar,\r\n    weeks_in_year = 52L,\r\n    MFTC_WEP_scaling = WEP_scaling\r\n  )\r\n  \r\n  MFTC_Couple_5050_benefit <- emtr(\r\n    parameters_NoMFTC_NoIWTC,\r\n    Partnered = T,\r\n    wage1_hourly = min_wage,\r\n    Children_ages = c(10),\r\n    gross_wage2 = min_wage*15,\r\n    hours2 = 15,\r\n    AS_Accommodation_Costs = 0,\r\n    AS_Accommodation_Rent = T,\r\n    AS_Area = 1L,\r\n    max_wage = min_wage*50,\r\n    steps_per_dollar = steps_per_dollar,\r\n    weeks_in_year = 52L,\r\n    MFTC_WEP_scaling = WEP_scaling\r\n  )\r\n  \r\n  # Family 2 - SPS sole parent\r\n  MFTC_SoleParent_working <- emtr(\r\n    parameters_NoMFTC,\r\n    Partnered = F,\r\n    wage1_hourly = min_wage,\r\n    Children_ages = c(10),\r\n    gross_wage2 = 0,\r\n    hours2 = 0,\r\n    AS_Accommodation_Costs = 0,\r\n    AS_Accommodation_Rent = T,\r\n    AS_Area = 1L,\r\n    max_wage = min_wage*50,\r\n    steps_per_dollar = steps_per_dollar,\r\n    weeks_in_year = 52L,\r\n    MFTC_WEP_scaling = WEP_scaling\r\n  )\r\n  \r\n  MFTC_SoleParent_benefit <- emtr(\r\n    parameters_NoMFTC_NoIWTC,\r\n    Partnered = F,\r\n    wage1_hourly = min_wage,\r\n    Children_ages = c(10),\r\n    gross_wage2 = 0,\r\n    hours2 = 0,\r\n    AS_Accommodation_Costs = 0,\r\n    AS_Accommodation_Rent = T,\r\n    AS_Area = 1L,\r\n    max_wage = min_wage*50,\r\n    steps_per_dollar = steps_per_dollar,\r\n    weeks_in_year = 52L,\r\n    MFTC_WEP_scaling = WEP_scaling\r\n  )\r\n  \r\n  ##### Find Net income crossing for staying on benefit vs getting IWTC ####\r\n  ## Then MFTC is the gross_wage - wage_tax amount at the crossing.\r\n  proposed_MFTC_SoleParent <- find_MFTC(\r\n    MFTC_SoleParent_benefit,\r\n    MFTC_SoleParent_working,\r\n    min_wage = min_wage,\r\n    ben_hours_test = 20\r\n  )\r\n  \r\n  proposed_MFTC_Couple_5050 <- find_MFTC(\r\n    MFTC_Couple_5050_benefit,\r\n    MFTC_Couple_5050_working,\r\n    min_wage = min_wage,\r\n    ben_hours_test = 15\r\n  )\r\n  \r\n  out <- data.table(\r\n    File = basename(parameter_file),\r\n    Family = c(\"Couple_50-50\", \"SoleParent\"),\r\n    MFTC_minincome = c(proposed_MFTC_Couple_5050, proposed_MFTC_SoleParent)\r\n  )\r\n  return(out)\r\n}\r\n","type":"text"},{"name":"R/estimate_parameter_files.R","content":"DEFAULT_MIN_WAGES <- c(\r\n  \"2014\" = 13.75,\r\n  \"2015\" = 14.25,\r\n  \"2016\" = 14.75,\r\n  \"2017\" = 15.25,\r\n  \"2018\" = 15.75,\r\n  \"2019\" = 16.50,\r\n  \"2020\" = 17.70,\r\n  \"2021\" = 18.90,\r\n  \"2022\" = 20.00,\r\n  \"2023\" = 21.20,\r\n  \"2024\" = 22.70,\r\n  # Assumes the minimum wage is unchanged for future tax years\r\n  \"2025\" = 22.70,\r\n  \"2026\" = 22.70,\r\n  \"2027\" = 22.70\r\n)\r\n\r\nestimate_MFTC_from_files <- function(\r\n  parameter_files,\r\n  min_wages = DEFAULT_MIN_WAGES,\r\n  WEP_scaling = 1\r\n) {\r\n  estimated_MFTC_rates <- data.table()\r\n  for (parameter_file in parameter_files){\r\n    tax_year <- parameter_file %>% basename() %>%\r\n      stringr::str_extract(\"TY[0-9]{2}\") %>%\r\n      stringr::str_remove(\"TY\") %>% as.numeric()\r\n    tax_year <- tax_year + 2000\r\n    if (tax_year > 2023) {\r\n      logging::logwarn(\r\n        \"Minimum wage for tax year %d is not legislated yet, subject to change\",\r\n        tax_year\r\n      )\r\n    }\r\n    if (tax_year %in% names(min_wages)) {\r\n      min_wage <- min_wages[[as.character(tax_year)]]\r\n    } else {\r\n      stop(\"Minimum wage not defined for tax year \", tax_year)\r\n    }\r\n    this_MFTC_rates <- estimate_MFTC_rates(\r\n      parameter_file,\r\n      min_wage = min_wage,\r\n      steps_per_dollar = 52L,\r\n      WEP_scaling = WEP_scaling\r\n    )\r\n    \r\n    estimated_MFTC_rates <- rbind(estimated_MFTC_rates, this_MFTC_rates, fill = TRUE)\r\n  }\r\n  \r\n  estimated_MFTC_rates[, max_MFTC := max(MFTC_minincome), by = File]\r\n  return(estimated_MFTC_rates)\r\n}","type":"text"},{"name":"R/get_js_download_file.R","content":"get_js_download_file <- function(server_file_path, download_file_name) {\r\n  base64_data <- sprintf(\r\n    \"data:%s;base64,%s\",\r\n    mime::guess_type(file = server_file_path),\r\n    base64enc::base64encode(server_file_path)\r\n  )\r\n  js_function <- sprintf(\r\n    \"\r\n      fetch('%s').then(res => res.blob()).then(blob => {\r\n        const downloadURL = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.style.display = 'none'; // Hide the link\r\n        document.body.appendChild(a);\r\n        a.href = downloadURL;\r\n        a.download = '%s';\r\n        a.click();\r\n        window.URL.revokeObjectURL(downloadURL);\r\n        document.body.removeChild(a);\r\n        return false;\r\n      });\",\r\n    base64_data, download_file_name\r\n  )\r\n  return(js_function)\r\n}\r\n\r\nsave_app_results <- function(details, parameter_differences, scenario_incomes, output_path) {\r\n  scenario_names <- scenario_incomes[, unique(Scenario)]\r\n  \r\n  wb <- openxlsx::createWorkbook()\r\n  openxlsx::addWorksheet(wb, \"Details\")\r\n  openxlsx::writeData(wb, \"Details\", names(details), startCol = 1)\r\n  openxlsx::writeData(wb, \"Details\", details, startCol = 2)\r\n  \r\n  if (length(scenario_names) > 1) {\r\n    # Parameters that changed\r\n    openxlsx::addWorksheet(wb, \"Scenario Differences\")\r\n    openxlsx::writeData(wb, \"Scenario Differences\", parameter_differences)\r\n  }\r\n  \r\n  # Full sets of results (should probably be more selective)\r\n  for (scenario in scenario_names) {\r\n    openxlsx::addWorksheet(wb, scenario)\r\n    openxlsx::writeData(wb, scenario, scenario_incomes[Scenario == scenario])\r\n  }\r\n  openxlsx::saveWorkbook(wb, output_path, overwrite = TRUE)\r\n}\r\n","type":"text"},{"name":"R/reformat_parameters.R","content":"# Convert TAWA parameter files to IncomeExplorer app parameter files\r\nTAWA_to_app_param_files <- function(\r\n  input_param_paths, output_param_dir, output_prefix,\r\n  output_template_path = \"App_Parameters_Template.xlsx\") {\r\n  \r\n  # Rename\r\n  new_names <- data.table(\r\n    Parameter = c(\r\n      \"FamilyAssistance/FTC/Rates/FirstChild0to15\",\r\n      \"FamilyAssistance/FTC/Rates/SecondChild0to12\",\r\n      \"FamilyAssistance/IWTC/IncomeTest\",\r\n      \"FamilyAssistance/IWTC/IncomeThreshold\",\r\n      \"FamilyAssistance/IWTC/IncomeThreshold\"\r\n    ),\r\n    New_Parameter = c(\r\n      \"FamilyAssistance/FTC/Rates/FirstChild\",\r\n      \"FamilyAssistance/FTC/Rates/SubsequentChild\",\r\n      \"FamilyAssistance/IWTC/Eligibility\",\r\n      \"FamilyAssistance/IWTC/IncomeThreshold/Couple\",\r\n      \"FamilyAssistance/IWTC/IncomeThreshold/Single\"\r\n    )\r\n  ) \r\n  # template\r\n  wb_template <- openxlsx::loadWorkbook(output_template_path)\r\n  parameters <- openxlsx::readWorkbook(wb_template) %>% setDT()\r\n  parameters <- parameters[, .(Parameter,Value, .I)]\r\n  \r\n  for (old_file in input_param_paths) {\r\n    # old file\r\n    old_parameters <- openxlsx::readWorkbook(old_file) %>% setDT()\r\n    setnames(old_parameters, c(\"Parameter\", \"Value\"))\r\n    \r\n    old_parameters <- merge(old_parameters, new_names, by = \"Parameter\", all = TRUE)\r\n    changed_parameters <- old_parameters[\r\n      New_Parameter != Parameter, .(old = Parameter, new = New_Parameter)\r\n    ]\r\n    \r\n    old_parameters[is.na(New_Parameter), New_Parameter := Parameter]\r\n    old_parameters <- old_parameters[, .(Parameter = New_Parameter, Value)]\r\n    \r\n    # merge existing values with template structure\r\n    new_parameters <- merge(\r\n      parameters, old_parameters,\r\n      by = \"Parameter\", all = TRUE\r\n    )\r\n    new_parameters[, Value := Value.y]\r\n    new_parameters[is.na(Value.y), Value := Value.x]\r\n    \r\n    logging::loginfo(paste0(\"Reformatting file: \", old_file))\r\n    logging::loginfo(paste0(\"Dropped Parameters: \", new_parameters[is.na(Value.x), Parameter]))\r\n    logging::loginfo(paste0(\"New Parameters: \", new_parameters[is.na(Value.y), Parameter]))\r\n    logging::loginfo(paste0(\"Renamed Parameters: \", changed_parameters[, new]))\r\n    \r\n    # save new parameters\r\n    new_parameters <- new_parameters[!is.na(Value.x)]\r\n    openxlsx::writeData(\r\n      wb_template, 1,\r\n      new_parameters[order(I), .(Parameter, Value)],\r\n      startRow = 2, startCol = 2\r\n    )\r\n    output_path <- file.path(output_param_dir, paste0(output_prefix, basename(old_file)))\r\n    openxlsx::saveWorkbook(wb_template, output_path, overwrite = TRUE)\r\n  }\r\n}\r\n","type":"text"},{"name":"R/save_excel_parameters.R","content":"scale_vector_to_tawa_param_string <- function(x) {\r\n  thresholds <- x$thresholds\r\n  rates <- x$rates\r\n  combined <- purrr::map2(thresholds, rates, function(threshold, rate) {\r\n    paste0(\"['\", threshold, \"'; '\", rate, \"']\")\r\n  })\r\n  out <- paste0(\"[\", paste0(combined, collapse = \"; \"), \"]\")\r\n  return(out)\r\n}\r\n\r\nPARAMS_TEMPLATE <- data.table::as.data.table(tibble::tribble(\r\n  ~Parameter, ~Default_Value, ~Description,\r\n  \"modelyear\", \"0\", 'Tax year that you are modelling',\r\n  \"ACC/LevyRate\", \"0\", 'Rate is specified with each forecast update',\r\n  \"ACC/MaxLeviableIncome\", \"0\", 'Specified with each forecast update',\r\n  \"Accommodation/AbatementRate\", \"0\", 'Abatement rate for AS payments (currently 0.25, so lose 25c for every extra dollar earned)',\r\n  \"Accommodation/BaseRateThreshold/Mortgage\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/BaseRateThreshold/Rent\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/CoupleDeps/Single2/Deps/Area1\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/CoupleDeps/Single2/Deps/Area2\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/CoupleDeps/Single2/Deps/Area3\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/CoupleDeps/Single2/Deps/Area4\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/CoupleNoDeps/Single1Dep/Area1\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/CoupleNoDeps/Single1Dep/Area2\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/CoupleNoDeps/Single1Dep/Area3\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/CoupleNoDeps/Single1Dep/Area4\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/SingleNoDeps/Area1\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/SingleNoDeps/Area2\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/SingleNoDeps/Area3\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/MaxRate/SingleNoDeps/Area4\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Accommodation/PaymentPercentage\", \"0\", 'AS = min[MaxRate, (PaymentPercentage) * (HousingCosts - (BaseRateThreshold)*BaseIncome)].',\r\n  \"Benefits/JSS/AbatementScale\", \"[['0'; '0']]\", 'Job Seeker Support settings',\r\n  \"Benefits/JSS/CoupleAbatementScale\", \"[['0'; '0']]\", 'Job Seeker Support settings',\r\n  \"Benefits/JSS/Rate/Couple\", \"0\", 'Job Seeker Support settings',\r\n  \"Benefits/JSS/Rate/CoupleParent\", \"0\", 'Job Seeker Support settings',\r\n  \"Benefits/JSS/Rate/Single\", \"0\", 'Job Seeker Support settings',\r\n  \"Benefits/JSS/Rate/SoleParent\", \"0\", 'Job Seeker Support settings',\r\n  \"Benefits/SPS/AbatementScale\", \"[['0'; '0']]\", 'Sole Parent Support settings',\r\n  \"Benefits/SPS/Rate\", \"0\", 'Sole Parent Support settings',\r\n  \"Benefits/Entitlement/Age/SPS/ChildLowerBound\", \"0\", 'Age threshold for the youngest child such that an individual is eligible for SPS',\r\n  \"Benefits/WinterEnergy/Rates/Single\", \"0\", 'Winter energy payment amount. Given to families receiving a core benefit or NZ Super. ',\r\n  \"Benefits/WinterEnergy/Rates/CoupleOrDeps\", \"0\", 'Winter energy payment amount. Given to families receiving a core benefit or NZ Super. ',\r\n  \"FamilyAssistance/Abatement/AbatementScale\", \"[['0'; '0']]\", 'Working for Families abatement',\r\n  \"FamilyAssistance/Abatement/Order\", \"0\", 'Working for Families abatement FTC and IWTC order. 0 (default): FTC first then IWTC, 1: IWTC first then FTC.',\r\n  \"FamilyAssistance/FTC/Rates/FirstChild\", \"0\", 'Family Tax Credit amount for first child',\r\n  \"FamilyAssistance/FTC/Rates/SubsequentChild\", \"0\", 'Family Tax Credit amount for subsequent children',\r\n  \"FamilyAssistance/IWTC/Rates/UpTo3Children\", \"0\", 'In Work Tax Credit amount given for up to three children',\r\n  \"FamilyAssistance/IWTC/Rates/SubsequentChildren\", \"0\", 'In Work Tax Credit amount for each subsequent child',\r\n  \"FamilyAssistance/IWTC/Eligibility\", \"0\", 'Eligibility test for In Work Tax Credit. 0: Status quo, based on hours worked and not given to beneficiaries. 1: Income test, option to give to beneficiaries (see below), 2: Phase in amount of IWTC based on phase-in scales (see below).',\r\n  \"FamilyAssistance/FullTimeWorkingHours/Couple\", \"0\", 'Number of hours for a couple to be classified as working full time, for IWTC and MFTC eligibility  (FamilyAssistance/IWTC/Eligibility must be set to 0)',\r\n  \"FamilyAssistance/FullTimeWorkingHours/Single\", \"0\", 'Number of hours for a single parent to be classified as working full time, for IWTC and MFTC eligibility (FamilyAssistance/IWTC/Eligibility must be set to 0)',\r\n  \"FamilyAssistance/IWTC/IncomeThreshold/Single\", \"0\", 'Income test for a single parent to receive IWTC and MFTC (FamilyAssistance/IWTC/Eligibility must be set to 1)',\r\n  \"FamilyAssistance/IWTC/IncomeThreshold/Couple\", \"0\", 'Income test for a couple to receive IWTC and MFTC (FamilyAssistance/IWTC/Eligibility must be set to 1)',\r\n  \"FamilyAssistance/IWTC/ToBeneficiaries\", \"0\", 'Determines if beneficiaries can receive IWTC (FamilyAssistance/IWTC/Eligibility must be set to 1)',\r\n  \"FamilyAssistance/IWTC/PhaseIn/Single\", \"[['0'; '0']]\", 'Single parent phase-in scale for IWTC, e.g. a phase-in scale of 20% is specified as -0.2 (FamilyAssistance/IWTC/Eligibility must be set to 2)',\r\n  \"FamilyAssistance/IWTC/PhaseIn/Couple\", \"[['0', '0']]\", 'Couple phase-in scale for IWTC, e.g. a phase-in scale of 20% is specified as -0.2 (FamilyAssistance/IWTC/Eligibility must be set to 2)',\r\n  \"FamilyAssistance/MFTC/Rates/MinimumIncome\", \"0\", 'Minimum income that ensures that a family is better off in work than on benefit; the Minimum Family Tax Credit brings their income up to this amount. Value is calculated by the TAWA version of the IRD calculator.',\r\n  \"FamilyAssistance/BestStart/Abatement/AbatementScale\", \"[['0'; '0']]\", 'Abatement scale for Best Start payments (however best start payments for 0 year olds are not abated)',\r\n  \"FamilyAssistance/BestStart/Rates/Age0\", \"0\", 'Best start rate for a 0 year old',\r\n  \"FamilyAssistance/BestStart/Rates/Age1or2\", \"0\", 'Best start rate for 1 and 2 year olds',\r\n  \"IETC/AbatementScale\", \"[['0'; '0']]\", 'Independent Earner Tax Credit, abatement scale',\r\n  \"IETC/MinimalIncome\", \"0\", 'Independent Earner Tax Credit, minimum bound on earned income to determine eligibility',\r\n  \"IETC/PerYear\", \"0\", 'Independent Earner Tax Credit, amount for each year',\r\n  \"IETC/OnlyFamiliesWithoutChildren\", \"0\", 'Independent Earner Tax Credit, 0: give to everyone, 1: only give to families without children',\r\n  \"Tax/BaseScale\", \"[['0'; '0']]\", 'Tax scale',\r\n  \"MFTC_WEP_scaling\", \"1\", 'How should the Winter Energy Payment be scaled? Average week = 1, Winter week = 12/5, Summer week = 0',\r\n  \"WFF_or_Benefit\", \"Max\", 'What work decision should we assume? Go off-benefit and receive IWTC = \"WFF\", stay on-benefit = \"Benefit\", or whichever gives a higher net income = \"Max\"'\r\n))\r\n\r\nsave_excel_params <- function(\r\n    params, output_path,\r\n    firstRow = 2, firstCol = 2,\r\n    params_output_template = PARAMS_TEMPLATE\r\n) {\r\n  params <- copy(params)\r\n  \r\n  # Encode Scales as the string \"[['x1', 'x2']; ['y1', 'y2']]\"\r\n  scale_cols <- names(params) %>% .[. %like% \"Scale$|PhaseIn\"]\r\n  for (scale_col in scale_cols) {\r\n    params[[scale_col]] <- scale_vector_to_tawa_param_string(params[[scale_col]])\r\n  }\r\n  \r\n  params_dt <- transpose(as.data.table(params), keep.names = \"Parameter\")\r\n  setnames(params_dt, \"V1\", \"Value\")\r\n  params_dt[\r\n    !(Parameter %in% c(\"MFTC_WEP_scaling\", \"WFF_or_Benefit\")),\r\n    Parameter := stringr::str_replace_all(Parameter, \"_\", \"/\")\r\n  ]\r\n  \r\n  params_dt <- merge(params_output_template[, .(Parameter, Description)], params_dt, by = \"Parameter\")\r\n  params_dt[, Parameter := factor(Parameter, levels = unique(params_output_template$Parameter))]\r\n  setorder(params_dt, Parameter)\r\n  setcolorder(params_dt, c(\"Parameter\", \"Value\", \"Description\"))\r\n  \r\n  # Styling variables\r\n  STYLE_HEADER_FONT <- openxlsx::createStyle(fontSize = 13, fontColour = \"#1F497D\", textDecoration = \"bold\")\r\n  STYLE_BORDER_BOTTOM <- openxlsx::createStyle(border = \"bottom\")\r\n  STYLE_NORMAL <- openxlsx::createStyle(fgFill = \"#DCE6F1\", halign = \"left\")\r\n  STYLE_HIGHLIGHTED_BLUE <- openxlsx::createStyle(fgFill = \"#B8CCE4\")\r\n\r\n  # Calculate parameter groups so we can give borders around them\r\n  dt_param_names <- copy(params_dt)\r\n  dt_param_names[, row := .I]\r\n\r\n  # Most parameters have a suffix separated by a \"/\"\r\n  # Some parameters are in CamelCase and start with \"Use\"\r\n  dt_param_names[, prefix := tstrsplit(Parameter, split = \"/\", keep = 1)]\r\n  dt_param_names[prefix %>% startsWith(\"Use\"), prefix := \"Use\"]\r\n  \r\n  # Special treatment for these \"groups\"\r\n  dt_param_names[Parameter %like% \"^Benefits/JSS\", prefix := \"JSS\"]\r\n  dt_param_names[Parameter %like% \"^Benefits.*SPS\", prefix := \"SPS\"]\r\n  dt_param_names[Parameter %like% \"^Benefits/WinterEnergy\", prefix := \"WinterEnergy\"]\r\n  dt_param_names[Parameter %like% \"^FamilyAssistance/Abatement\", prefix := \"WFF_Abatement\"]\r\n  dt_param_names[Parameter %like% \"^FamilyAssistance/FTC\", prefix := \"FTC\"]\r\n  dt_param_names[Parameter %like% \"^FamilyAssistance/MFTC\", prefix := \"MFTC\"]\r\n  dt_param_names[Parameter %like% \"^FamilyAssistance/BestStart\", prefix := \"BestStart\"]\r\n  \r\n  # Some extra parameters have underscores - treat these as their own group\r\n  dt_param_names[Parameter %like% \"_\", prefix := \"Other\"]\r\n\r\n  # Give a bottom border to rows when they are the last in the group\r\n  dt_param_names[, use_top_border := prefix != shift(prefix, type = \"lead\")]\r\n\r\n  # Add firstRow to skip the empty row and the header row\r\n  rows_with_bottom_border <- firstRow + dt_param_names[use_top_border == TRUE, row]\r\n\r\n  # Also give bottom border to header and last row\r\n  rows_with_bottom_border <- unique(\r\n    c(firstRow, rows_with_bottom_border, firstRow + nrow(params) + 1)\r\n  )\r\n\r\n  # Cells to highlight in blue\r\n  prefixes_in_blue <- dt_param_names$prefix %>% unique() %>% .[seq(2, length(.), 2)] %>% paste0(collapse = \"|\")\r\n  rows_in_blue <- c(firstRow, firstRow + dt_param_names[prefix %like% prefixes_in_blue, row])\r\n  \r\n  # Create workbook and sheet\r\n  wb <- openxlsx::createWorkbook()\r\n  sheet <- openxlsx::addWorksheet(wb, \"Parameters\")\r\n  \r\n  # Set zoom\r\n  wb$worksheets[[1]]$sheetViews <- stringr::str_replace(wb$worksheets[[1]]$sheetViews, '(?<=zoomScale=\")[0-9]+', \"85\")\r\n  \r\n  openxlsx::writeData(\r\n    wb, sheet, x = params_dt,\r\n    startRow = firstRow, startCol = firstCol, colNames = TRUE\r\n  )\r\n  \r\n  # Convert everything to numeric\r\n  params_numeric <- params_dt[\r\n    , lapply(.SD, function(.) suppressWarnings(as.numeric(.))), .SDcols = !c(\"Parameter\", \"Description\")\r\n  ]\r\n  openxlsx::writeData(\r\n    wb, sheet, x = params_numeric,\r\n    startRow = firstRow, startCol = firstCol + 1, colNames = TRUE\r\n  )\r\n  # Check the first column of numeric data to find the NA's\r\n  na_rows <- which(is.na(params_numeric[, .SD, .SDcols = 1]))\r\n  for (na_row in na_rows) {\r\n    openxlsx::writeData(\r\n      wb, sheet,\r\n      x = params_dt[na_row, .SD, .SDcols = !c(\"Parameter\", \"Description\")],\r\n      startRow = firstRow + na_row, startCol = firstCol + 1, colNames = FALSE\r\n    )\r\n  }\r\n\r\n  # Column settings\r\n  out_cols <- firstCol - 1 + seq(1, ncol(params_dt))\r\n  col_widths <- c(50, 50, 180)\r\n\r\n  # Style Parameters sheet\r\n  openxlsx::setColWidths(wb, \"Parameters\", cols = 1, widths = 8)\r\n  openxlsx::setColWidths(wb, \"Parameters\", cols = out_cols, widths = col_widths)\r\n\r\n  openxlsx::addStyle(\r\n    wb, \"Parameters\", STYLE_HEADER_FONT,\r\n    rows = firstRow, cols = out_cols,\r\n    gridExpand = TRUE, stack = TRUE\r\n  )\r\n  openxlsx::addStyle(\r\n    wb, \"Parameters\", STYLE_NORMAL,\r\n    rows = firstRow - 1 + 1:(nrow(params_dt) + 1), cols = out_cols,\r\n    gridExpand = TRUE, stack = TRUE\r\n  )\r\n  openxlsx::addStyle(\r\n    wb, \"Parameters\", STYLE_BORDER_BOTTOM,\r\n    rows = rows_with_bottom_border, cols = out_cols,\r\n    gridExpand = TRUE, stack = TRUE\r\n  )\r\n  openxlsx::addStyle(\r\n    wb, \"Parameters\", STYLE_HIGHLIGHTED_BLUE,\r\n    rows = rows_in_blue, cols = out_cols,\r\n    gridExpand = TRUE, stack = TRUE\r\n  )\r\n\r\n  openxlsx::saveWorkbook(wb, output_path, overwrite = TRUE)\r\n}\r\n","type":"text"},{"name":"R/split_TAWA_parameters.R","content":"################################################################################\r\n# Generates TAWA parameter files from given parameters, inflators, and mapping files.\r\n# All HES years and tax years share the same inflator and mapping file,\r\n# with parameters being specific to each tax year,\r\n# and the baseyear parameter set equal to the HES year.\r\n# The parameters for all tax years are taken to be columns in the parameters file.\r\n################################################################################\r\n\r\nsplit_TAWA_parameters <- function(params_path, output_suffix, output_dir) {\r\n  all_params <- openxlsx::read.xlsx(params_path) %>% setDT()\r\n  \r\n  # Don't hard-code these parameters\r\n  all_params <- all_params[!(Parameter %in% c(\"Database_File\", \"baseyear\", \"Out_File\"))]\r\n  \r\n  # Extract tax years from the parameters file\r\n  tax_years <- all_params[Parameter == \"modelyear\", .SD, .SDcols = !\"Parameter\"] %>%\r\n    unlist() %>% as.numeric()\r\n  tax_years <- tax_years - 2000\r\n  \r\n  STYLE_FONT <- openxlsx::createStyle(fontName = \"Segoe UI\", fontSize = 10)\r\n  STYLE_BOLD <- openxlsx::createStyle(textDecoration = \"bold\")\r\n  STYLE_BORDER_BOTTOM <- openxlsx::createStyle(border = \"bottom\")\r\n  STYLE_HIGHLIGHTED <- openxlsx::createStyle(fgFill = \"#FFFF00\")\r\n  \r\n  rows_with_bottom_border <- c(2, 5, 7, 28, 30, 50, 69, 72, 78, 79, 88, 96, 97)\r\n  \r\n  for(tax_year in tax_years) {\r\n    logging::loginfo(\"TY%d\", tax_year)\r\n    \r\n    this_TY_col <- names(all_params) %>% .[. %like% paste0(\"TY\", tax_year)]\r\n    params <- all_params[, .SD, .SDcols = c(\"Parameter\", this_TY_col)]\r\n    this_params_col <- paste0(\"SQ_TY\", tax_year, output_suffix)\r\n    setnames(params, this_TY_col, this_params_col)\r\n    \r\n    # Cast character data to numeric,\r\n    # and shuffle the column names around while saving the character data\r\n    # to fill in the numeric NAs manually later\r\n    params[, numeric_data := lapply(.SD, function(.) {\r\n      suppressWarnings(as.numeric(.))\r\n    }), .SDcols = this_params_col]\r\n    \r\n    setnames(params, c(this_params_col, \"numeric_data\"), c(\"character_data\", this_params_col))\r\n    setcolorder(params, c(\"Parameter\", this_params_col, \"character_data\"))\r\n    \r\n    # Create xlsx file with required sheets\r\n    wb <- openxlsx::createWorkbook()\r\n    openxlsx::addWorksheet(wb, \"Parameters\")\r\n    \r\n    # Parameter Data\r\n    openxlsx::writeData(\r\n      wb, \"Parameters\",\r\n      x = params[, .SD, .SDcols = c(\"Parameter\", this_params_col)],\r\n      startRow = 2, startCol = 2, colNames = TRUE\r\n    )\r\n    \r\n    # Replace individual cells having NA numerical data with character data\r\n    na_rows <- which(is.na(params[, .SD, .SDcols = this_params_col]))\r\n    for (na_row in na_rows) {\r\n      openxlsx::writeData(\r\n        wb, \"Parameters\",\r\n        x = params[na_row, character_data],\r\n        startRow = 2 + na_row, startCol = 3\r\n      )\r\n    }\r\n    \r\n    # Style Parameters sheet\r\n    openxlsx::showGridLines(wb, \"Parameters\", showGridLines = FALSE)\r\n    openxlsx::setRowHeights(wb, \"Parameters\", rows = 1 + 1:nrow(params), heights = 16)\r\n    openxlsx::setColWidths(wb, \"Parameters\", cols = 2:3, widths = c(60.55, 22.55))\r\n    \r\n    openxlsx::addStyle(\r\n      wb, \"Parameters\", STYLE_BOLD,\r\n      rows = 2:5, cols = 2:3, gridExpand = TRUE, stack = TRUE\r\n    )\r\n    openxlsx::addStyle(\r\n      wb, \"Parameters\", STYLE_FONT,\r\n      rows = 1 + 1:nrow(params), cols = 2:3, gridExpand = TRUE, stack = TRUE\r\n    )\r\n    openxlsx::addStyle(\r\n      wb, \"Parameters\", STYLE_BORDER_BOTTOM,\r\n      rows = rows_with_bottom_border, cols = 2:3, gridExpand = TRUE, stack = TRUE\r\n    )\r\n    openxlsx::addStyle(\r\n      wb, \"Parameters\", STYLE_HIGHLIGHTED,\r\n      rows = 89:97, cols = 2:3, gridExpand = TRUE, stack = TRUE\r\n    )\r\n    \r\n    this_filename <- file.path(\r\n      output_dir, sprintf(\"TY%d%s.xlsx\", tax_year, output_suffix)\r\n    )\r\n    openxlsx::saveWorkbook(wb, this_filename, overwrite = TRUE)\r\n  }\r\n}","type":"text"},{"name":"R/util.R","content":"# Helper functions for EMTR function\r\n\r\n#' @title Abatement\r\n#' @author Christopher Ball, \\email{Christopher.Ball@@treasury.govt.nz}\r\n#'\r\n#' @description Works out the abatement on a given amount under a given abatement regime\r\n#' against a certain income.  Can be applied only to certain sample elements using\r\n#' the Cond argument, and is fully vectorised by design.\r\n#'\r\n#' @param Cond Boolean vector of which elements are abated.  Can use\r\n#' \\code{T} to apply to all elements.\r\n#' @param Amount The amount which is abated.\r\n#' @param Scale An abatement scale (set of rates and thresholds) which is applied to\r\n#' the amount.\r\n#' @param Income An income measure used for determining abatement\r\n#' @return Vector of abated incomes.  Assumes that abated amount is non-negative.\r\n#' @family Utilities\r\n#' @export\r\nAbate <- function(Cond, Amount, Scale, Income){\r\n  Scale_Items <- length(Scale[[1]])\r\n  for (Item in 2:Scale_Items){\r\n    Amount <- Amount - Cond * pmax(0, pmin(Scale[['thresholds']][Item], Income) - Scale[['thresholds']][Item - 1]) * Scale[['rates']][Item - 1]\r\n  }\r\n  Amount <- Amount - Cond * pmax(0, Income - Scale[['thresholds']][Scale_Items]) * Scale[['rates']][Scale_Items]\r\n  return(pmax(0, Amount))\r\n}\r\nattr(Abate, \"utility\") <- T\r\n\r\n#' @title Abatement Vanishing Point\r\n#' @author Christopher Ball, \\email{Christopher.Ball@@treasury.govt.nz}\r\n#'\r\n#' @description Works out the minimum income amount under a given scale at which\r\n#' the abated amount is $0.  Assumes that such a point exists.  Not vectorised,\r\n#' but it doesn't in general need to be as a vector can be made through recycling.\r\n#'\r\n#' @inheritParams Abate\r\n#' @return Abatement vanishing point.\r\n#' @family Utilities\r\n#' @export\r\nAbatement_Vanishing_Point <- function(Scale, Amount){\r\n  # Not vectorised - but it doesn't need to be!\r\n  n <- length(Scale[[1]])\r\n  for (Th in 1:(n-1)){\r\n    if (Scale[['rates']][Th] == 0) next\r\n    if (Scale[['thresholds']][Th] + Amount/Scale[['rates']][Th] > Scale[['thresholds']][Th + 1]){\r\n      Amount = Amount - Scale[['rates']][Th]*(Scale[['thresholds']][Th + 1] - Scale[['thresholds']][Th])\r\n    } else {\r\n      return(Scale[['thresholds']][Th] + Amount/Scale[['rates']][Th])\r\n    }\r\n  }\r\n  return(Scale[['thresholds']][n] + Amount/Scale[['rates']][n])\r\n}\r\nattr(Abatement_Vanishing_Point, \"utility\") <- T\r\n\r\n#' @title Applies a given tax system to an income amount.\r\n#' @author Christopher Ball, \\email{Christopher.Ball@@treasury.govt.nz}\r\n#'\r\n#' @description This function calculates the tax amount due given the pre-tax\r\n#' amount and the relevant tax scale.  Vectorised for efficiency.\r\n#'\r\n#' @inheritParams Gross_From_Net\r\n#' @return Vector of tax amounts.\r\n#' @family Utilities\r\n#' @export\r\nApply <- function(Amount, Tax_Scale){\r\n  Tax <- 0\r\n  n <- length(Tax_Scale[[1]])\r\n  for (Th in 1:(n-1)){\r\n    Tax <- Tax + (pmin(pmax(Amount, Tax_Scale[['thresholds']][Th]), Tax_Scale[['thresholds']][Th + 1]) - Tax_Scale[['thresholds']][Th])*Tax_Scale[['rates']][Th]\r\n  }\r\n  return(Tax + pmax(0, Amount - Tax_Scale[['thresholds']][n])*Tax_Scale[['rates']][n])\r\n}\r\nattr(Apply, \"utility\") <- T\r\n\r\nNet_Thresholds <- function(Tax_BaseScale) {\r\n  NIT <- c(0)\r\n  for (band in 2:length(Tax_BaseScale$thresholds)){\r\n    NIT <- c(NIT, tail(NIT, 1) + (Tax_BaseScale$thresholds[band] - Tax_BaseScale$thresholds[band-1]) * (1 - Tax_BaseScale$rates[[band-1]]))\r\n  }\r\n  return(NIT)\r\n}\r\n\r\nGross_From_Net <- function(Amount, Net_Thresholds, Tax_Scale){\r\n  Levels <- length(Net_Thresholds)\r\n  Old <- 0\r\n  Gross <- 0*Amount\r\n  for (Th in 2:Levels){\r\n    Gross <- Gross + (Amount < Net_Thresholds[Th] & Amount >= Net_Thresholds[Th - 1])*\r\n      (Tax_Scale$thresholds[Th-1] + (Amount - Old) / (1 - Tax_Scale$rates[Th - 1]))\r\n    Old <- Net_Thresholds[Th]\r\n  }\r\n  return(Gross + (Amount > Net_Thresholds[Levels]) * \r\n           (Tax_Scale$thresholds[Levels] + (Amount - Old) / (1 - Tax_Scale$rates[Levels])))\r\n}\r\nattr(Gross_From_Net, \"utility\") <- T\r\n\r\n\r\n#' @title Calculates the net income given gross income and a tax scale.\r\n#' @author Christopher Ball, \\email{Christopher.Ball@@treasury.govt.nz}\r\n#'\r\n#' @description This function calculates the net of tax income given the pre-tax\r\n#' amount and the relevant tax scale.  Vectorised for efficiency.\r\n#'\r\n#' @inheritParams Gross_From_Net\r\n#' @return Vector of net of tax income amounts.\r\n#' @seealso Apply\r\n#' @family Utilities\r\n#' @export\r\nNet_From_Gross <- function(Amount, Tax_Scale){\r\n  return(Amount - Apply(Amount, Tax_Scale))\r\n}\r\nattr(Net_From_Gross, \"utility\") <- T\r\n\r\n\r\n\r\n\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY14.yaml","content":"modelyear: 2014.0\r\nACC_LevyRate: 0.017\r\nACC_MaxLeviableIncome: 116089.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 225.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 165.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 120.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 160.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 125.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 55.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 145.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 100.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 65.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 45.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 171.84\r\nBenefits_JSS_Rate_CoupleParent: 0.0\r\nBenefits_JSS_Rate_Single: 206.21\r\nBenefits_JSS_Rate_SoleParent: 295.37\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 5220.0\r\n  - 10440.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 295.37\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 0.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 0.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 36350.0\r\n  rates:\r\n  - 0.0\r\n  - 0.2125\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 4822.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 3351.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3120.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 0.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 0.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 0.0\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 22724.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 0.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 0.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY15.yaml","content":"modelyear: 2015.0\r\nACC_LevyRate: 0.0145\r\nACC_MaxLeviableIncome: 118191.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 225.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 165.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 120.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 160.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 125.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 55.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 145.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 100.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 65.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 45.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 174.21\r\nBenefits_JSS_Rate_CoupleParent: 0.0\r\nBenefits_JSS_Rate_Single: 209.06\r\nBenefits_JSS_Rate_SoleParent: 299.45\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 5220.0\r\n  - 10440.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 299.45\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 0.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 0.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 36350.0\r\n  rates:\r\n  - 0.0\r\n  - 0.2125\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 4822.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 3351.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3120.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 0.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 0.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 0.0\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 22776.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 0.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 0.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY16.yaml","content":"modelyear: 2016.0\r\nACC_LevyRate: 0.0145\r\nACC_MaxLeviableIncome: 120070.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 225.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 165.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 120.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 160.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 125.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 55.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 145.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 100.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 65.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 45.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 175.1\r\nBenefits_JSS_Rate_CoupleParent: 0.0\r\nBenefits_JSS_Rate_Single: 210.13\r\nBenefits_JSS_Rate_SoleParent: 300.98\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 5220.0\r\n  - 10440.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 300.98\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 0.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 0.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 36350.0\r\n  rates:\r\n  - 0.0\r\n  - 0.2125\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 4822.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 3351.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3120.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 0.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 0.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 0.0\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 23036.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 0.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 0.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY17.yaml","content":"modelyear: 2017.0\r\nACC_LevyRate: 0.0139\r\nACC_MaxLeviableIncome: 122063.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 225.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 165.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 120.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 160.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 125.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 55.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 145.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 100.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 65.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 45.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 175.1\r\nBenefits_JSS_Rate_CoupleParent: 187.6\r\nBenefits_JSS_Rate_Single: 210.13\r\nBenefits_JSS_Rate_SoleParent: 325.98\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 5220.0\r\n  - 10440.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 325.98\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 0.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 0.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 36350.0\r\n  rates:\r\n  - 0.0\r\n  - 0.225\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 4822.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 3351.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 0.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 0.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 0.0\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 23764.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 0.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 0.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY18.yaml","content":"modelyear: 2018.0\r\nACC_LevyRate: 0.0139\r\nACC_MaxLeviableIncome: 124053.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 225.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 165.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 120.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 160.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 125.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 75.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 55.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 145.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 100.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 65.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 45.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 177.03\r\nBenefits_JSS_Rate_CoupleParent: 189.67\r\nBenefits_JSS_Rate_Single: 212.45\r\nBenefits_JSS_Rate_SoleParent: 329.57\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 5220.0\r\n  - 10440.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 329.57\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 0.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 0.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 36350.0\r\n  rates:\r\n  - 0.0\r\n  - 0.225\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 4822.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 3351.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 0.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 0.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 0.0\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 23816.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 0.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 0.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY19.yaml","content":"modelyear: 2019.0\r\nACC_LevyRate: 0.0139\r\nACC_MaxLeviableIncome: 126286.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 179.44\r\nBenefits_JSS_Rate_CoupleParent: 192.25\r\nBenefits_JSS_Rate_Single: 215.34\r\nBenefits_JSS_Rate_SoleParent: 334.05\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 5220.0\r\n  - 10440.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 334.05\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 450.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 700.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.25\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 5878.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 4745.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 0.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 0.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 0.0\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 26156.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 3120.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 3120.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY20.yaml","content":"modelyear: 2020.0\r\nACC_LevyRate: 0.0139\r\nACC_MaxLeviableIncome: 128470.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4176.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 182.47\r\nBenefits_JSS_Rate_CoupleParent: 195.5\r\nBenefits_JSS_Rate_Single: 218.98\r\nBenefits_JSS_Rate_SoleParent: 339.69\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 5220.0\r\n  - 10440.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 339.69\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 450.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 700.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.25\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 5878.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 4745.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 0.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 0.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 0.0\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 26572.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 3120.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 3120.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY21.yaml","content":"modelyear: 2021.0\r\nACC_LevyRate: 0.0139\r\nACC_MaxLeviableIncome: 130911.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4698.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 4698.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 200.6\r\nBenefits_JSS_Rate_CoupleParent: 214.03\r\nBenefits_JSS_Rate_Single: 250.74\r\nBenefits_JSS_Rate_SoleParent: 375.17\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 6003.0\r\n  - 11223.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 375.17\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 900.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 1400.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.25\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 5878.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 4745.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 1.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 986.58\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 986.58\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 29432.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 3120.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 3120.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY22.yaml","content":"modelyear: 2022.0\r\nACC_LevyRate: 0.0139\r\nACC_MaxLeviableIncome: 130911.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 226.81\r\nBenefits_JSS_Rate_CoupleParent: 240.65\r\nBenefits_JSS_Rate_Single: 278.5\r\nBenefits_JSS_Rate_SoleParent: 406.78\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  - 13050.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 406.78\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 450.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 700.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.25\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 5878.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 4745.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 1.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 1044.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 1044.0\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 31096.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 3120.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 3120.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  - 180000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\n  - 0.39\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY23.yaml","content":"modelyear: 2023.0\r\nACC_LevyRate: 0.0146\r\nACC_MaxLeviableIncome: 136544.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 268.0\r\nBenefits_JSS_Rate_CoupleParent: 283.0\r\nBenefits_JSS_Rate_Single: 315.0\r\nBenefits_JSS_Rate_SoleParent: 440.96\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  - 13050.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 440.96\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 450.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 700.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.27\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 6642.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 5412.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 1.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 1106.64\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 1106.64\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 32864.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 3388.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 3388.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  - 180000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\n  - 0.39\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY24.yaml","content":"modelyear: 2024.0\r\nACC_LevyRate: 0.0153\r\nACC_MaxLeviableIncome: 139384.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 287.35\r\nBenefits_JSS_Rate_CoupleParent: 303.43\r\nBenefits_JSS_Rate_Single: 337.74\r\nBenefits_JSS_Rate_SoleParent: 472.79\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  - 13050.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 472.79\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 450.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 700.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.27\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 7121.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 5802.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 1.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 1184.94\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 1184.94\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 34216.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 3632.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 3632.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  - 180000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\n  - 0.39\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY25.yaml","content":"modelyear: 2025.0\r\nACC_LevyRate: 0.016\r\nACC_MaxLeviableIncome: 142283.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 300.97\r\nBenefits_JSS_Rate_CoupleParent: 317.81\r\nBenefits_JSS_Rate_Single: 353.74\r\nBenefits_JSS_Rate_SoleParent: 495.19\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  - 13050.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 495.19\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 450.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 700.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.27\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 7524.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 6130.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 1.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 1184.94\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 1184.94\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 35204.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 3838.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 3838.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  - 180000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\n  - 0.39\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY26.yaml","content":"modelyear: 2026.0\r\nACC_LevyRate: 0.016\r\nACC_MaxLeviableIncome: 145242.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 314.79\r\nBenefits_JSS_Rate_CoupleParent: 332.41\r\nBenefits_JSS_Rate_Single: 369.99\r\nBenefits_JSS_Rate_SoleParent: 517.93\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  - 13050.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 517.93\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 450.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 700.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.27\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 7524.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 6130.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 1.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 1184.94\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 1184.94\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 36036.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 3838.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 3838.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  - 180000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\n  - 0.39\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY27.yaml","content":"modelyear: 2027.0\r\nACC_LevyRate: 0.016\r\nACC_MaxLeviableIncome: 148263.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 326.66\r\nBenefits_JSS_Rate_CoupleParent: 344.94\r\nBenefits_JSS_Rate_Single: 383.94\r\nBenefits_JSS_Rate_SoleParent: 537.45\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  - 13050.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 537.45\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 450.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 700.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.27\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 7963.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 6488.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 1.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 1184.94\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 1184.94\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 36868.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 4062.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 4062.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  - 180000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\n  - 0.39\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"},{"name":"inst/parameters/HYEFU23_TY28.yaml","content":"modelyear: 2028.0\r\nACC_LevyRate: 0.016\r\nACC_MaxLeviableIncome: 151347.0\r\nAccommodation_AbatementRate: 0.25\r\nAccommodation_BaseRateThreshold_Mortgage: 0.3\r\nAccommodation_BaseRateThreshold_Rent: 0.25\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area1: 305.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area2: 220.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area3: 160.0\r\nAccommodation_MaxRate_CoupleDeps_Single2_Deps_Area4: 120.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area1: 235.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area2: 155.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area3: 105.0\r\nAccommodation_MaxRate_CoupleNoDeps_Single1Dep_Area4: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area1: 165.0\r\nAccommodation_MaxRate_SingleNoDeps_Area2: 105.0\r\nAccommodation_MaxRate_SingleNoDeps_Area3: 80.0\r\nAccommodation_MaxRate_SingleNoDeps_Area4: 70.0\r\nAccommodation_PaymentPercentage: 0.7\r\nBenefits_JSS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.7\r\nBenefits_JSS_CoupleAbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  rates:\r\n  - 0.0\r\n  - 0.35\r\nBenefits_JSS_Rate_Couple: 336.96\r\nBenefits_JSS_Rate_CoupleParent: 355.81\r\nBenefits_JSS_Rate_Single: 396.04\r\nBenefits_JSS_Rate_SoleParent: 554.39\r\nBenefits_SPS_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 8352.0\r\n  - 13050.0\r\n  rates:\r\n  - 0.0\r\n  - 0.3\r\n  - 0.7\r\nBenefits_SPS_Rate: 554.39\r\nBenefits_Entitlement_Age_SPS_ChildLowerBound: 14.0\r\nBenefits_WinterEnergy_Rates_Single: 450.0\r\nBenefits_WinterEnergy_Rates_CoupleOrDeps: 700.0\r\nFamilyAssistance_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 42700.0\r\n  rates:\r\n  - 0.0\r\n  - 0.27\r\nFamilyAssistance_Abatement_Order: 0.0\r\nFamilyAssistance_FTC_Rates_FirstChild: 7963.0\r\nFamilyAssistance_FTC_Rates_SubsequentChild: 6488.0\r\nFamilyAssistance_IWTC_Rates_UpTo3Children: 3770.0\r\nFamilyAssistance_IWTC_Rates_SubsequentChildren: 780.0\r\nFamilyAssistance_IWTC_Eligibility: 1.0\r\nFamilyAssistance_FullTimeWorkingHours_Couple: 30.0\r\nFamilyAssistance_FullTimeWorkingHours_Single: 20.0\r\nFamilyAssistance_IWTC_IncomeThreshold_Single: 1184.94\r\nFamilyAssistance_IWTC_IncomeThreshold_Couple: 1184.94\r\nFamilyAssistance_IWTC_ToBeneficiaries: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Single:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_IWTC_PhaseIn_Couple:\r\n  thresholds: 0.0\r\n  rates: 0.0\r\nFamilyAssistance_MFTC_Rates_MinimumIncome: 37648.0\r\nFamilyAssistance_BestStart_Abatement_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 79000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.21\r\nFamilyAssistance_BestStart_Rates_Age0: 4062.0\r\nFamilyAssistance_BestStart_Rates_Age1or2: 4062.0\r\nIETC_AbatementScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 44000.0\r\n  rates:\r\n  - 0.0\r\n  - 0.13\r\nIETC_MinimalIncome: 24000.0\r\nIETC_PerYear: 520.0\r\nIETC_OnlyFamiliesWithoutChildren: 0.0\r\nTax_BaseScale:\r\n  thresholds:\r\n  - 0.0\r\n  - 14000.0\r\n  - 48000.0\r\n  - 70000.0\r\n  - 180000.0\r\n  rates:\r\n  - 0.105\r\n  - 0.175\r\n  - 0.3\r\n  - 0.33\r\n  - 0.39\r\nMFTC_WEP_scaling: 1.0\r\nWFF_or_Benefit: Max\r\n","type":"text"}]
